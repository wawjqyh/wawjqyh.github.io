(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["docs/sequelize/models-definition"],{Ez99:function(e,n){var t='<h1 id="model-definition---\u6a21\u578b\u5b9a\u4e49">Model definition - \u6a21\u578b\u5b9a\u4e49</h1> <p>\u8981\u5b9a\u4e49\u6a21\u578b\u548c\u8868\u4e4b\u95f4\u7684\u6620\u5c04\uff0c\u8bf7\u4f7f\u7528<code>define</code>\u65b9\u6cd5\u3002 \u968f\u540eSequelize\u5c06\u81ea\u52a8\u6dfb\u52a0<code>createdAt</code>\u548c<code>updatedAt</code>\u5c5e\u6027\u3002 \u56e0\u6b64\uff0c\u60a8\u5c06\u80fd\u591f\u77e5\u9053\u6570\u636e\u5e93\u6761\u76ee\u4f55\u65f6\u8fdb\u5165\u6570\u636e\u5e93\u4ee5\u53ca\u6700\u540e\u4e00\u6b21\u66f4\u65b0\u65f6\u3002 \u5982\u679c\u60a8\u4e0d\u60f3\u5728\u6a21\u578b\u4e0a\u4f7f\u7528\u65f6\u95f4\u6233\uff0c\u53ea\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u6233\uff0c\u6216\u8005\u60a8\u6b63\u5728\u4f7f\u7528\u73b0\u6709\u7684\u6570\u636e\u5e93\uff0c\u5176\u4e2d\u5217\u88ab\u547d\u540d\u4e3a\u522b\u7684\u4e1c\u897f\uff0c\u76f4\u63a5\u8df3\u8f6c\u5230<a href="/manual/tutorial/models-definition.html#configuration">configuration</a>\u4ee5\u67e5\u770b\u5982\u4f55\u6267\u884c\u6b64\u64cd\u4f5c\u3002</p> <pre><code class="language-js">const Project = sequelize.define(&#39;project&#39;, {\n  title: Sequelize.STRING,\n  description: Sequelize.TEXT\n})\n\nconst Task = sequelize.define(&#39;task&#39;, {\n  title: Sequelize.STRING,\n  description: Sequelize.TEXT,\n  deadline: Sequelize.DATE\n})</code></pre> <p>\u4f60\u8fd8\u53ef\u4ee5\u5728\u6bcf\u5217\u4e0a\u8fdb\u884c\u4e00\u4e9b\u8bbe\u7f6e:</p> <pre><code class="language-js">const Foo = sequelize.define(&#39;foo&#39;, {\n // \u5982\u679c\u672a\u8d4b\u503c,\u5219\u81ea\u52a8\u8bbe\u7f6e\u503c\u4e3a TRUE\n flag: { type: Sequelize.BOOLEAN, allowNull: false, defaultValue: true},\n\n // \u8bbe\u7f6e\u9ed8\u8ba4\u65f6\u95f4\u4e3a\u5f53\u524d\u65f6\u95f4\n myDate: { type: Sequelize.DATE, defaultValue: Sequelize.NOW },\n\n // \u5c06allowNull\u8bbe\u7f6e\u4e3afalse\u4f1a\u5c06NOT NULL\u6dfb\u52a0\u5230\u5217\u4e2d\uff0c\n // \u8fd9\u610f\u5473\u7740\u5f53\u5217\u4e3a\u7a7a\u65f6\u6267\u884c\u67e5\u8be2\u65f6\u5c06\u4eceDB\u629b\u51fa\u9519\u8bef\u3002 \n // \u5982\u679c\u8981\u5728\u67e5\u8be2DB\u4e4b\u524d\u68c0\u67e5\u503c\u4e0d\u4e3a\u7a7a\uff0c\u8bf7\u67e5\u770b\u4e0b\u9762\u7684\u9a8c\u8bc1\u90e8\u5206\u3002\n title: { type: Sequelize.STRING, allowNull: false},\n\n // \u521b\u5efa\u5177\u6709\u76f8\u540c\u503c\u7684\u4e24\u4e2a\u5bf9\u8c61\u5c06\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\u3002 \u552f\u4e00\u5c5e\u6027\u53ef\u4ee5\u662f\u5e03\u5c14\u503c\u6216\u5b57\u7b26\u4e32\u3002\n // \u5982\u679c\u4e3a\u591a\u4e2a\u5217\u63d0\u4f9b\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u4eec\u5c06\u5f62\u6210\u590d\u5408\u552f\u4e00\u952e\u3002\n uniqueOne: { type: Sequelize.STRING,  unique: &#39;compositeIndex&#39;},\n uniqueTwo: { type: Sequelize.INTEGER, unique: &#39;compositeIndex&#39;},\n\n // unique\u5c5e\u6027\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7ea6\u675f\u3002\n someUnique: {type: Sequelize.STRING, unique: true},\n\n // \u8fd9\u4e0e\u5728\u6a21\u578b\u9009\u9879\u4e2d\u521b\u5efa\u7d22\u5f15\u5b8c\u5168\u76f8\u540c\u3002\n {someUnique: {type: Sequelize.STRING}},\n {indexes: [{unique: true, fields: [&#39;someUnique&#39;]}]},\n\n // primaryKey\u7528\u4e8e\u5b9a\u4e49\u4e3b\u952e\u3002\n identifier: { type: Sequelize.STRING, primaryKey: true},\n\n // autoIncrement\u53ef\u7528\u4e8e\u521b\u5efa\u81ea\u589e\u7684\u6574\u6570\u5217\n incrementMe: { type: Sequelize.INTEGER, autoIncrement: true },\n\n // \u4f60\u53ef\u4ee5\u901a\u8fc7&#39;field&#39;\u5c5e\u6027\u6307\u5b9a\u81ea\u5b9a\u4e49\u5b57\u6bb5\u540d\u79f0\uff1a\n fieldWithUnderscores: { type: Sequelize.STRING, field: &#39;field_with_underscores&#39; },\n\n // \u8fd9\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5916\u952e:\n bar_id: {\n   type: Sequelize.INTEGER,\n\n   references: {\n     // \u8fd9\u662f\u5f15\u7528\u53e6\u4e00\u4e2a\u6a21\u578b\n     model: Bar,\n\n     // \u8fd9\u662f\u5f15\u7528\u6a21\u578b\u7684\u5217\u540d\u79f0\n     key: &#39;id&#39;,\n\n     // \u8fd9\u58f0\u660e\u4ec0\u4e48\u65f6\u5019\u68c0\u67e5\u5916\u952e\u7ea6\u675f\u3002 \u4ec5\u9650PostgreSQL\u3002\n     deferrable: Sequelize.Deferrable.INITIALLY_IMMEDIATE\n   }\n }\n})</code></pre> <p>\u6ce8\u91ca\u9009\u9879\u4e5f\u53ef\u4ee5\u5728\u8868\u4e0a\u4f7f\u7528, \u67e5\u770b <a href="/manual/tutorial/models-definition.html#configuration">model configuration</a></p> <h2 id="\u65f6\u95f4\u6233">\u65f6\u95f4\u6233</h2> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSequelize \u4f1a\u5c06 <code>createdAt</code> \u548c <code>updatedAt</code> \u5c5e\u6027\u6dfb\u52a0\u5230\u6a21\u578b\u4e2d\uff0c\u4ee5\u4fbf\u60a8\u80fd\u591f\u77e5\u9053\u6570\u636e\u5e93\u6761\u76ee\u4f55\u65f6\u8fdb\u5165\u6570\u636e\u5e93\u4ee5\u53ca\u4f55\u65f6\u88ab\u66f4\u65b0\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u4f7f\u7528 Sequelize \u8fc1\u79fb\uff0c\u5219\u9700\u8981\u5c06 <code>createdAt</code> \u548c <code>updatedAt</code> \u5b57\u6bb5\u6dfb\u52a0\u5230\u8fc1\u79fb\u5b9a\u4e49\u4e2d\uff1a</p> <pre><code class="language-js">module.exports = {\n  up(queryInterface, Sequelize) {\n    return queryInterface.createTable(&#39;my-table&#39;, {\n      id: {\n        type: Sequelize.INTEGER,\n        primaryKey: true,\n        autoIncrement: true,\n      },\n\n      // \u65f6\u95f4\u6233\n      createdAt: Sequelize.DATE,\n      updatedAt: Sequelize.DATE,\n    })\n  },\n  down(queryInterface, Sequelize) {\n    return queryInterface.dropTable(&#39;my-table&#39;);\n  },\n}\n</code></pre> <p>\u5982\u679c\u60a8\u4e0d\u60f3\u5728\u6a21\u578b\u4e0a\u4f7f\u7528\u65f6\u95f4\u6233\uff0c\u53ea\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\u6233\u8bb0\uff0c\u6216\u8005\u60a8\u6b63\u5728\u4f7f\u7528\u73b0\u6709\u7684\u6570\u636e\u5e93\uff0c\u5176\u4e2d\u5217\u88ab\u547d\u540d\u4e3a\u522b\u7684\u4e1c\u897f\uff0c\u76f4\u63a5\u8df3\u8f6c\u5230 [configuration] <a href="/manual/tutorial/models-definition.html#configuration">0</a> \u4ee5\u67e5\u770b\u5982\u4f55\u6267\u884c\u6b64\u64cd\u4f5c\u3002</p> <h2 id="\u6570\u636e\u7c7b\u578b">\u6570\u636e\u7c7b\u578b</h2> <p>\u4ee5\u4e0b\u662f Sequelize \u652f\u6301\u7684\u4e00\u4e9b\u6570\u636e\u7c7b\u578b\u3002 \u6709\u5173\u5b8c\u6574\u548c\u66f4\u65b0\u7684\u5217\u8868, \u53c2\u9605 <a href="/variable/index.html#static-variable-DataTypes">DataTypes</a>.</p> <pre><code class="language-js">Sequelize.STRING                      // VARCHAR(255)\nSequelize.STRING(1234)                // VARCHAR(1234)\nSequelize.STRING.BINARY               // VARCHAR BINARY\nSequelize.TEXT                        // TEXT\nSequelize.TEXT(&#39;tiny&#39;)                // TINYTEXT\n\nSequelize.INTEGER                     // INTEGER\nSequelize.BIGINT                      // BIGINT\nSequelize.BIGINT(11)                  // BIGINT(11)\n\nSequelize.FLOAT                       // FLOAT\nSequelize.FLOAT(11)                   // FLOAT(11)\nSequelize.FLOAT(11, 12)               // FLOAT(11,12)\n\nSequelize.REAL                        // REAL        PostgreSQL only.\nSequelize.REAL(11)                    // REAL(11)    PostgreSQL only.\nSequelize.REAL(11, 12)                // REAL(11,12) PostgreSQL only.\n\nSequelize.DOUBLE                      // DOUBLE\nSequelize.DOUBLE(11)                  // DOUBLE(11)\nSequelize.DOUBLE(11, 12)              // DOUBLE(11,12)\n\nSequelize.DECIMAL                     // DECIMAL\nSequelize.DECIMAL(10, 2)              // DECIMAL(10,2)\n\nSequelize.DATE                        // DATETIME for mysql / sqlite, TIMESTAMP WITH TIME ZONE for postgres\nSequelize.DATE(6)                     // DATETIME(6) for mysql 5.6.4+. Fractional seconds support with up to 6 digits of precision\nSequelize.DATEONLY                    // DATE without time.\nSequelize.BOOLEAN                     // TINYINT(1)\n\nSequelize.ENUM(&#39;value 1&#39;, &#39;value 2&#39;)  // An ENUM with allowed values &#39;value 1&#39; and &#39;value 2&#39;\nSequelize.ARRAY(Sequelize.TEXT)       // Defines an array. PostgreSQL only.\nSequelize.ARRAY(Sequelize.ENUM)       // Defines an array of ENUM. PostgreSQL only.\n\nSequelize.JSON                        // JSON column. PostgreSQL, SQLite and MySQL only.\nSequelize.JSONB                       // JSONB column. PostgreSQL only.\n\nSequelize.BLOB                        // BLOB (bytea for PostgreSQL)\nSequelize.BLOB(&#39;tiny&#39;)                // TINYBLOB (bytea for PostgreSQL. Other options are medium and long)\n\nSequelize.UUID                        // UUID datatype for PostgreSQL and SQLite, CHAR(36) BINARY for MySQL (use defaultValue: Sequelize.UUIDV1 or Sequelize.UUIDV4 to make sequelize generate the ids automatically)\n\nSequelize.RANGE(Sequelize.INTEGER)    // Defines int4range range. PostgreSQL only.\nSequelize.RANGE(Sequelize.BIGINT)     // Defined int8range range. PostgreSQL only.\nSequelize.RANGE(Sequelize.DATE)       // Defines tstzrange range. PostgreSQL only.\nSequelize.RANGE(Sequelize.DATEONLY)   // Defines daterange range. PostgreSQL only.\nSequelize.RANGE(Sequelize.DECIMAL)    // Defines numrange range. PostgreSQL only.\n\nSequelize.ARRAY(Sequelize.RANGE(Sequelize.DATE)) // Defines array of tstzrange ranges. PostgreSQL only.\n\nSequelize.GEOMETRY                    // Spatial column.  PostgreSQL (with PostGIS) or MySQL only.\nSequelize.GEOMETRY(&#39;POINT&#39;)           // Spatial column with geometry type. PostgreSQL (with PostGIS) or MySQL only.\nSequelize.GEOMETRY(&#39;POINT&#39;, 4326)     // Spatial column with geometry type and SRID.  PostgreSQL (with PostGIS) or MySQL only.</code></pre> <p>BLOB\u6570\u636e\u7c7b\u578b\u5141\u8bb8\u60a8\u5c06\u6570\u636e\u4f5c\u4e3a\u5b57\u7b26\u4e32\u548c\u4e8c\u8fdb\u5236\u63d2\u5165\u3002 \u5f53\u60a8\u5728\u5177\u6709BLOB\u5217\u7684\u6a21\u578b\u4e0a\u6267\u884cfind\u6216findAll\u65f6\uff0c\u8be5\u6570\u636e\u5c06\u59cb\u7ec8\u4f5c\u4e3a\u4e8c\u8fdb\u5236\u8fd4\u56de\u3002</p> <p>\u5982\u679c\u4f60\u6b63\u5728\u4f7f\u7528PostgreSQL TIMESTAMP WITHOUT TIMEZONE\uff0c\u60a8\u9700\u8981\u5c06\u5176\u89e3\u6790\u4e3a\u4e0d\u540c\u7684\u65f6\u533a\uff0c\u8bf7\u4f7f\u7528pg\u5e93\u81ea\u5df1\u7684\u89e3\u6790\u5668\uff1a</p> <pre><code class="language-js">require(&#39;pg&#39;).types.setTypeParser(1114, stringValue =&gt; {\n  return new Date(stringValue + &#39;+0000&#39;);\n  // \u4f8b\u5982UTC\u504f\u79fb\u3002 \u4f7f\u7528\u4f60\u60f3\u8981\u7684\u4efb\u4f55\u504f\u79fb\u3002\n});</code></pre> <p>\u9664\u4e86\u4e0a\u8ff0\u7c7b\u578b\u4e4b\u5916\uff0cinteger\uff0cbigint\uff0cfloat\u548cdouble\u4e5f\u652f\u6301unsigned\u548czerofill\u5c5e\u6027\uff0c\u53ef\u4ee5\u6309\u4efb\u4f55\u987a\u5e8f\u7ec4\u5408\uff1a \u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u9002\u7528\u4e8ePostgreSQL\uff01</p> <pre><code class="language-js">Sequelize.INTEGER.UNSIGNED              // INTEGER UNSIGNED\nSequelize.INTEGER(11).UNSIGNED          // INTEGER(11) UNSIGNED\nSequelize.INTEGER(11).ZEROFILL          // INTEGER(11) ZEROFILL\nSequelize.INTEGER(11).ZEROFILL.UNSIGNED // INTEGER(11) UNSIGNED ZEROFILL\nSequelize.INTEGER(11).UNSIGNED.ZEROFILL // INTEGER(11) UNSIGNED ZEROFILL</code></pre> <p><em>\u4e0a\u9762\u7684\u4f8b\u5b50\u53ea\u663e\u793a\u6574\u6570\uff0c\u4f46\u662f\u53ef\u4ee5\u7528bigint\u548cfloat\u6765\u5b8c\u6210</em></p> <p>\u7528\u5bf9\u8c61\u8868\u793a\u6cd5:</p> <pre><code class="language-js">// \u5bf9\u4e8e\u679a\u4e3e:\nsequelize.define(&#39;model&#39;, {\n  states: {\n    type:   Sequelize.ENUM,\n    values: [&#39;active&#39;, &#39;pending&#39;, &#39;deleted&#39;]\n  }\n})</code></pre> <h3 id="arrayenum">Array(ENUM)</h3> <p>\u6b64\u9879\u4ec5\u652f\u6301 PostgreSQL.</p> <p>Array(ENUM) \u7c7b\u578b\u9700\u8981\u7279\u6b8a\u5904\u7406\u3002 \u6bcf\u5f53 Sequelize \u4e0e\u6570\u636e\u5e93\u901a\u4fe1\u65f6\uff0c\u5b83\u5fc5\u987b\u4f7f\u7528 ENUM \u540d\u79f0\u5bf9\u6570\u7ec4\u503c\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\u3002</p> <p>\u6240\u4ee5\u8fd9\u4e2a\u679a\u4e3e\u540d\u5fc5\u987b\u9075\u5faa <code>enum_&lt;table_name&gt;_&lt;col_name&gt;</code> \u8fd9\u4e2a\u6a21\u5f0f\u3002 \u5982\u679c\u60a8\u6b63\u5728\u4f7f\u7528 <code>sync</code>\uff0c\u5219\u4f1a\u81ea\u52a8\u751f\u6210\u6b63\u786e\u7684\u540d\u79f0\u3002</p> <h3 id="\u8303\u56f4\u7c7b\u578b">\u8303\u56f4\u7c7b\u578b</h3> <p>\u7531\u4e8e\u8303\u56f4\u7c7b\u578b\u5177\u6709\u5176\u7ed1\u5b9a\u7684\u5305\u542b(inclusive)/\u6392\u9664(exclusive)\u7684\u989d\u5916\u4fe1\u606f\uff0c\u6240\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5143\u7ec4\u5728javascript\u4e2d\u8868\u793a\u5b83\u4eec\u5e76\u4e0d\u662f\u5f88\u7b80\u5355\u3002</p> <p>\u5c06\u8303\u56f4\u4f5c\u4e3a\u503c\u63d0\u4f9b\u65f6\uff0c\u60a8\u53ef\u4ee5\u4ece\u4ee5\u4e0bAPI\u4e2d\u8fdb\u884c\u9009\u62e9\uff1a</p> <pre><code class="language-js">// \u9ed8\u8ba4\u4e3a &#39;[&quot;2016-01-01 00:00:00+00:00&quot;, &quot;2016-02-01 00:00:00+00:00&quot;)&#39;\n// \u5305\u542b\u4e0b\u9650, \u6392\u9664\u4e0a\u9650\nTimeline.create({ range: [new Date(Date.UTC(2016, 0, 1)), new Date(Date.UTC(2016, 1, 1))] });\n\n// \u63a7\u5236\u5305\u542b\nconst range = [new Date(Date.UTC(2016, 0, 1)), new Date(Date.UTC(2016, 1, 1))];\nrange.inclusive = false; // &#39;()&#39;\nrange.inclusive = [false, true]; // &#39;(]&#39;\nrange.inclusive = true; // &#39;[]&#39;\nrange.inclusive = [true, false]; // &#39;[)&#39;\n\n// \u6216\u4f5c\u4e3a\u5355\u4e2a\u8868\u8fbe\u5f0f\nconst range = [\n  { value: new Date(Date.UTC(2016, 0, 1)), inclusive: false },\n  { value: new Date(Date.UTC(2016, 1, 1)), inclusive: true },\n];\n// &#39;(&quot;2016-01-01 00:00:00+00:00&quot;, &quot;2016-02-01 00:00:00+00:00&quot;]&#39;\n\n// \u590d\u5408\u5f62\u5f0f\nconst range = [\n  { value: new Date(Date.UTC(2016, 0, 1)), inclusive: false },\n  new Date(Date.UTC(2016, 1, 1)),\n];\n// &#39;(&quot;2016-01-01 00:00:00+00:00&quot;, &quot;2016-02-01 00:00:00+00:00&quot;)&#39;\n\nTimeline.create({ range });</code></pre> <p>\u65e0\u8bba\u600e\u6837, \u8bf7\u6ce8\u610f\u65e0\u8bba\u4f55\u65f6\u4f60\u63a5\u6536\u5230\u7684\u8fd4\u56de\u503c\u5c06\u4f1a\u662f\u662f\u4e00\u4e2a\u8303\u56f4:</p> <pre><code class="language-js">// \u50a8\u5b58\u7684\u503c: (&quot;2016-01-01 00:00:00+00:00&quot;, &quot;2016-02-01 00:00:00+00:00&quot;]\nrange // [Date, Date]\nrange.inclusive // [false, true]</code></pre> <p>\u786e\u4fdd\u5728\u5e8f\u5217\u5316\u4e4b\u524d\u5c06\u5176\u8f6c\u6362\u4e3a\u53ef\u5e8f\u5217\u5316\u7684\u683c\u5f0f\uff0c\u56e0\u4e3a\u6570\u7ec4\u989d\u5916\u7684\u5c5e\u6027\u5c06\u4e0d\u4f1a\u88ab\u5e8f\u5217\u5316\u3002</p> <p><strong>\u7279\u6b8a\u60c5\u51b5</strong></p> <pre><code class="language-js">// \u7a7a\u8303\u56f4:\nTimeline.create({ range: [] }); // range = &#39;empty&#39;\n\n// \u65e0\u9650\u5236\u8303\u56f4:\nTimeline.create({ range: [null, null] }); // range = &#39;[,)&#39;\n// range = &#39;[,&quot;2016-01-01 00:00:00+00:00&quot;)&#39;\nTimeline.create({ range: [null, new Date(Date.UTC(2016, 0, 1))] });\n\n// \u65e0\u7a77\u8303\u56f4:\n// range = &#39;[-infinity,&quot;2016-01-01 00:00:00+00:00&quot;)&#39;\nTimeline.create({ range: [-Infinity, new Date(Date.UTC(2016, 0, 1))] });\n</code></pre> <h2 id="\u53ef\u5ef6\u8fdf">\u53ef\u5ef6\u8fdf</h2> <p>\u5f53\u4f60\u5728 PostgreSQL \u4e2d\u6307\u5b9a\u5916\u952e\u5217\u7684\u53c2\u6570\u6765\u58f0\u660e\u6210\u4e00\u4e2a\u53ef\u5ef6\u8fdf\u7c7b\u578b\u3002 \u53ef\u7528\u7684\u9009\u9879\u5982\u4e0b\uff1a</p> <pre><code class="language-js">// \u5c06\u6240\u6709\u5916\u952e\u7ea6\u675f\u68c0\u67e5\u63a8\u8fdf\u5230\u4e8b\u52a1\u7ed3\u675f\u65f6\u3002\nSequelize.Deferrable.INITIALLY_DEFERRED\n\n// \u7acb\u5373\u68c0\u67e5\u5916\u952e\u7ea6\u675f\u3002\nSequelize.Deferrable.INITIALLY_IMMEDIATE\n\n// \u4e0d\u8981\u63a8\u8fdf\u68c0\u67e5\u3002\nSequelize.Deferrable.NOT</code></pre> <p>\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f PostgreSQL \u7684\u9ed8\u8ba4\u503c\uff0c\u4e0d\u5141\u8bb8\u4f60\u5728\u4e8b\u52a1\u4e2d\u52a8\u6001\u7684\u66f4\u6539\u89c4\u5219\u3002 \u67e5\u770b <a href="/manual/tutorial/transactions.html#options">the transaction section</a> \u83b7\u53d6\u8865\u5145\u4fe1\u606f.</p> <h2 id="getters--setters">Getters &amp; setters</h2> <p>\u53ef\u4ee5\u5728\u6a21\u578b\u4e0a\u5b9a\u4e49&#39;\u5bf9\u8c61\u5c5e\u6027&#39;getter\u548csetter\u51fd\u6570\uff0c\u8fd9\u4e9b\u53ef\u4ee5\u7528\u4e8e\u6620\u5c04\u5230\u6570\u636e\u5e93\u5b57\u6bb5\u7684\u201c\u4fdd\u62a4\u201d\u5c5e\u6027\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u5b9a\u4e49\u201c\u4f2a\u201d\u5c5e\u6027\u3002</p> <p>Getters\u548cSetters\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u5b9a\u4e49\uff08\u60a8\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528\u8fd9\u4e24\u79cd\u65b9\u5f0f\uff09\uff1a</p> <ul> <li>\u4f5c\u4e3a\u5c5e\u6027\u5b9a\u4e49\u7684\u4e00\u90e8\u5206</li> <li>\u4f5c\u4e3a\u6a21\u578b\u53c2\u6570\u7684\u4e00\u90e8\u5206</li> </ul> <p><strong>\u6ce8\u610f:</strong> \u5982\u679c\u5728\u4e24\u4e2a\u5730\u65b9\u5b9a\u4e49\u4e86getter\u6216setter\uff0c\u90a3\u4e48\u5728\u76f8\u5173\u5c5e\u6027\u5b9a\u4e49\u4e2d\u627e\u5230\u7684\u51fd\u6570\u59cb\u7ec8\u662f\u4f18\u5148\u7684\u3002</p> <h3 id="\u5b9a\u4e49\u4e3a\u5c5e\u6027\u5b9a\u4e49\u7684\u4e00\u90e8\u5206">\u5b9a\u4e49\u4e3a\u5c5e\u6027\u5b9a\u4e49\u7684\u4e00\u90e8\u5206</h3> <pre><code class="language-js">const Employee = sequelize.define(&#39;employee&#39;, {\n  name: {\n    type: Sequelize.STRING,\n    allowNull: false,\n    get() {\n      const title = this.getDataValue(&#39;title&#39;);\n      // &#39;this&#39; \u5141\u8bb8\u4f60\u8bbf\u95ee\u5b9e\u4f8b\u7684\u5c5e\u6027\n      return this.getDataValue(&#39;name&#39;) + &#39; (&#39; + title + &#39;)&#39;;\n    },\n  },\n  title: {\n    type: Sequelize.STRING,\n    allowNull: false,\n    set(val) {\n      this.setDataValue(&#39;title&#39;, val.toUpperCase());\n    }\n  }\n});\n\nEmployee\n  .create({ name: &#39;John Doe&#39;, title: &#39;senior engineer&#39; })\n  .then(employee =&gt; {\n    console.log(employee.get(&#39;name&#39;)); // John Doe (SENIOR ENGINEER)\n    console.log(employee.get(&#39;title&#39;)); // SENIOR ENGINEER\n  })</code></pre> <h3 id="\u5b9a\u4e49\u4e3a\u6a21\u578b\u53c2\u6570\u7684\u4e00\u90e8\u5206">\u5b9a\u4e49\u4e3a\u6a21\u578b\u53c2\u6570\u7684\u4e00\u90e8\u5206</h3> <p>\u4ee5\u4e0b\u662f\u5728\u6a21\u578b\u53c2\u6570\u4e2d\u5b9a\u4e49 getter \u548c setter \u7684\u793a\u4f8b\u3002 <code>fullName</code> getter\uff0c\u662f\u4e00\u4e2a\u8bf4\u660e\u5982\u4f55\u5728\u6a21\u578b\u4e0a\u5b9a\u4e49\u4f2a\u5c5e\u6027\u7684\u4f8b\u5b50 - \u8fd9\u4e9b\u5c5e\u6027\u5b9e\u9645\u4e0a\u4e0d\u662f\u6570\u636e\u5e93\u6a21\u5f0f\u7684\u4e00\u90e8\u5206\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u4f2a\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u5b9a\u4e49\uff1a\u4f7f\u7528\u6a21\u578bgetter\uff0c\u6216\u8005\u4f7f\u7528<a href="/variable/index.html#static-variable-DataTypes"><code>\u865a\u62df</code>\u6570\u636e\u7c7b\u578b</a>\u7684\u5217\u3002 \u865a\u62df\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u6709\u9a8c\u8bc1\uff0c\u800c\u865a\u62df\u5c5e\u6027\u7684getter\u5219\u4e0d\u80fd\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c<code>fullName</code> getter\u51fd\u6570\u4e2d\u5f15\u7528\u7684<code>this.firstname</code>\u548c<code>this.lastname</code>\u5c06\u89e6\u53d1\u5bf9\u76f8\u5e94getter\u51fd\u6570\u7684\u8c03\u7528\u3002 \u5982\u679c\u4f60\u4e0d\u60f3\u90a3\u6837\u4f7f\u7528<code>getDataValue()</code>\u65b9\u6cd5\u6765\u8bbf\u95ee\u539f\u59cb\u503c\uff08\u89c1\u4e0b\u6587\uff09\u3002</p> <pre><code class="language-js">const Foo = sequelize.define(&#39;foo&#39;, {\n  firstname: Sequelize.STRING,\n  lastname: Sequelize.STRING\n}, {\n  getterMethods: {\n    fullName() {\n      return this.firstname + &#39; &#39; + this.lastname\n    }\n  },\n\n  setterMethods: {\n    fullName(value) {\n      const names = value.split(&#39; &#39;);\n\n      this.setDataValue(&#39;firstname&#39;, names.slice(0, -1).join(&#39; &#39;));\n      this.setDataValue(&#39;lastname&#39;, names.slice(-1).join(&#39; &#39;));\n    },\n  }\n});</code></pre> <h3 id="\u7528\u4e8e-getter-\u548c-setter-\u5b9a\u4e49\u5185\u90e8\u7684-helper-\u65b9\u6cd5">\u7528\u4e8e getter \u548c setter \u5b9a\u4e49\u5185\u90e8\u7684 Helper \u65b9\u6cd5</h3> <ul> <li>\u68c0\u7d22\u5e95\u5c42\u5c5e\u6027\u503c - \u603b\u662f\u4f7f\u7528 <code>this.getDataValue()</code></li> </ul> <pre><code class="language-js">/* \u4e00\u4e2a\u7528\u4e8e &#39;title&#39; \u5c5e\u6027\u7684 getter */\nget() {\n  return this.getDataValue(&#39;title&#39;)\n}</code></pre> <ul> <li>\u8bbe\u7f6e\u57fa\u7840\u5c5e\u6027\u503c - \u603b\u662f\u4f7f\u7528 <code>this.setDataValue()</code></li> </ul> <pre><code class="language-js">/* \u4e00\u4e2a\u7528\u4e8e &#39;title&#39; \u5c5e\u6027\u7684 setter */\nset(title) {\n  this.setDataValue(&#39;title&#39;, title.toString().toLowerCase());\n}</code></pre> <p><strong>\u6ce8\u610f:</strong> \u575a\u6301\u4f7f\u7528 <code>setDataValue()</code> \u548c <code>getDataValue()</code> \u51fd\u6570\uff08\u800c\u4e0d\u662f\u76f4\u63a5\u8bbf\u95ee\u5e95\u5c42\u7684\u201c\u6570\u636e\u503c\u201d\u5c5e\u6027\uff09\u662f\u975e\u5e38\u91cd\u8981\u7684 - \u8fd9\u6837\u505a\u53ef\u4ee5\u4fdd\u62a4\u60a8\u7684\u5b9a\u5236getter\u548csetter\u4e0d\u53d7\u5e95\u5c42\u6a21\u578b\u5b9e\u73b0\u7684\u53d8\u5316\u3002</p> <h2 id="\u9a8c\u8bc1">\u9a8c\u8bc1</h2> <p>\u6a21\u578b\u9a8c\u8bc1\uff0c\u5141\u8bb8\u60a8\u4e3a\u6a21\u578b\u7684\u6bcf\u4e2a\u5c5e\u6027\u6307\u5b9a\u683c\u5f0f/\u5185\u5bb9/\u7ee7\u627f\u9a8c\u8bc1\u3002</p> <p>\u9a8c\u8bc1\u4f1a\u81ea\u52a8\u8fd0\u884c\u5728 <code>create</code> \uff0c <code>update</code> \u548c <code>save</code> \u4e0a\u3002 \u4f60\u4e5f\u53ef\u4ee5\u8c03\u7528 <code>validate()</code> \u624b\u52a8\u9a8c\u8bc1\u4e00\u4e2a\u5b9e\u4f8b\u3002</p> <p>\u9a8c\u8bc1\u7531 <a href="https://github.com/chriso/validator.js">validator.js</a> \u5b9e\u73b0\u3002</p> <pre><code class="language-js">const ValidateMe = sequelize.define(&#39;foo&#39;, {\n  foo: {\n    type: Sequelize.STRING,\n    validate: {\n      is: [&quot;^[a-z]+$&quot;,&#39;i&#39;],     // \u53ea\u5141\u8bb8\u5b57\u6bcd\n      is: /^[a-z]+$/i,          // \u4e0e\u4e0a\u4e00\u4e2a\u793a\u4f8b\u76f8\u540c,\u4f7f\u7528\u4e86\u771f\u6b63\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\n      not: [&quot;[a-z]&quot;,&#39;i&#39;],       // \u4e0d\u5141\u8bb8\u5b57\u6bcd\n      isEmail: true,            // \u68c0\u67e5\u90ae\u4ef6\u683c\u5f0f (foo@bar.com)\n      isUrl: true,              // \u68c0\u67e5\u8fde\u63a5\u683c\u5f0f (http://foo.com)\n      isIP: true,               // \u68c0\u67e5 IPv4 (129.89.23.1) \u6216 IPv6 \u683c\u5f0f\n      isIPv4: true,             // \u68c0\u67e5 IPv4 (129.89.23.1) \u683c\u5f0f\n      isIPv6: true,             // \u68c0\u67e5 IPv6 \u683c\u5f0f\n      isAlpha: true,            // \u53ea\u5141\u8bb8\u5b57\u6bcd\n      isAlphanumeric: true,     // \u53ea\u5141\u8bb8\u4f7f\u7528\u5b57\u6bcd\u6570\u5b57\n      isNumeric: true,          // \u53ea\u5141\u8bb8\u6570\u5b57\n      isInt: true,              // \u68c0\u67e5\u662f\u5426\u4e3a\u6709\u6548\u6574\u6570\n      isFloat: true,            // \u68c0\u67e5\u662f\u5426\u4e3a\u6709\u6548\u6d6e\u70b9\u6570\n      isDecimal: true,          // \u68c0\u67e5\u662f\u5426\u4e3a\u4efb\u610f\u6570\u5b57\n      isLowercase: true,        // \u68c0\u67e5\u662f\u5426\u4e3a\u5c0f\u5199\n      isUppercase: true,        // \u68c0\u67e5\u662f\u5426\u4e3a\u5927\u5199\n      notNull: true,            // \u4e0d\u5141\u8bb8\u4e3a\u7a7a\n      isNull: true,             // \u53ea\u5141\u8bb8\u4e3a\u7a7a\n      notEmpty: true,           // \u4e0d\u5141\u8bb8\u7a7a\u5b57\u7b26\u4e32\n      equals: &#39;specific value&#39;, // \u53ea\u5141\u8bb8\u4e00\u4e2a\u7279\u5b9a\u503c\n      contains: &#39;foo&#39;,          // \u68c0\u67e5\u662f\u5426\u5305\u542b\u7279\u5b9a\u7684\u5b50\u5b57\u7b26\u4e32\n      notIn: [[&#39;foo&#39;, &#39;bar&#39;]],  // \u68c0\u67e5\u662f\u5426\u503c\u4e0d\u662f\u5176\u4e2d\u4e4b\u4e00\n      isIn: [[&#39;foo&#39;, &#39;bar&#39;]],   // \u68c0\u67e5\u662f\u5426\u503c\u662f\u5176\u4e2d\u4e4b\u4e00\n      notContains: &#39;bar&#39;,       // \u4e0d\u5141\u8bb8\u5305\u542b\u7279\u5b9a\u7684\u5b50\u5b57\u7b26\u4e32\n      len: [2,10],              // \u53ea\u5141\u8bb8\u957f\u5ea6\u57282\u523010\u4e4b\u95f4\u7684\u503c\n      isUUID: 4,                // \u53ea\u5141\u8bb8uuids\n      isDate: true,             // \u53ea\u5141\u8bb8\u65e5\u671f\u5b57\u7b26\u4e32\n      isAfter: &quot;2011-11-05&quot;,    // \u53ea\u5141\u8bb8\u5728\u7279\u5b9a\u65e5\u671f\u4e4b\u540e\u7684\u65e5\u671f\u5b57\u7b26\u4e32\n      isBefore: &quot;2011-11-05&quot;,   // \u53ea\u5141\u8bb8\u5728\u7279\u5b9a\u65e5\u671f\u4e4b\u524d\u7684\u65e5\u671f\u5b57\u7b26\u4e32\n      max: 23,                  // \u53ea\u5141\u8bb8\u503c &lt;= 23\n      min: 23,                  // \u53ea\u5141\u8bb8\u503c &gt;= 23\n      isCreditCard: true,       // \u68c0\u67e5\u6709\u6548\u7684\u4fe1\u7528\u5361\u53f7\u7801\n\n      // \u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u9a8c\u8bc1:\n      isEven(value) {\n        if (parseInt(value) % 2 != 0) {\n          throw new Error(&#39;Only even values are allowed!&#39;)\n          // \u6211\u4eec\u4e5f\u5728\u6a21\u578b\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u6240\u4ee5\u5982\u679c\u5b83\u5b58\u5728\u7684\u8bdd, \n          // this.otherField\u4f1a\u5f97\u5230otherField\u7684\u503c\u3002\n        }\n      }\n    }\n  }\n});</code></pre> <p>\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u9700\u8981\u5c06\u591a\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u5185\u7f6e\u7684\u9a8c\u8bc1\u51fd\u6570\uff0c\u5219\u8981\u4f20\u9012\u7684\u53c2\u6570\u5fc5\u987b\u4f4d\u4e8e\u6570\u7ec4\u4e2d\u3002 \u4f46\u662f\uff0c\u5982\u679c\u8981\u4f20\u9012\u5355\u4e2a\u6570\u7ec4\u53c2\u6570\uff0c\u4f8b\u5982<code>isIn</code>\u7684\u53ef\u63a5\u53d7\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u5219\u5c06\u88ab\u89e3\u91ca\u4e3a\u591a\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u6570\u7ec4\u53c2\u6570\u3002 \u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f20\u9012\u4e00\u4e2a\u5355\u4e00\u957f\u5ea6\u7684\u53c2\u6570\u6570\u7ec4\uff0c\u6bd4\u5982<code>[[&#39;one&#39;\uff0c&#39;two&#39;]]</code>\u3002</p> <p>\u8981\u4f7f\u7528\u81ea\u5b9a\u4e49\u9519\u8bef\u6d88\u606f\u800c\u4e0d\u662f validator.js \u63d0\u4f9b\u7684\u9519\u8bef\u6d88\u606f\uff0c\u8bf7\u4f7f\u7528\u5bf9\u8c61\u800c\u4e0d\u662f\u7eaf\u503c\u6216\u53c2\u6570\u6570\u7ec4\uff0c\u4f8b\u5982\u4e0d\u9700\u8981\u53c2\u6570\u7684\u9a8c\u8bc1\u5668\u53ef\u4ee5\u88ab\u7ed9\u5b9a\u81ea\u5b9a\u4e49\u6d88\u606f:</p> <pre><code class="language-js">isInt: {\n  msg: &quot;Must be an integer number of pennies&quot;\n}</code></pre> <p>\u6216\u8005\u5982\u679c\u8fd8\u9700\u8981\u4f20\u9012\u53c2\u6570\uff0c\u8bf7\u6dfb\u52a0\u4e00\u4e2a<code>args</code>\u5c5e\u6027\uff1a</p> <pre><code class="language-js">isIn: {\n  args: [[&#39;en&#39;, &#39;zh&#39;]],\n  msg: &quot;Must be English or Chinese&quot;\n}</code></pre> <p>\u5f53\u4f7f\u7528\u81ea\u5b9a\u4e49\u9a8c\u8bc1\u5668\u51fd\u6570\u65f6\uff0c\u9519\u8bef\u6d88\u606f\u5c06\u662f\u629b\u51fa\u7684<code>Error</code>\u5bf9\u8c61\u6240\u6301\u6709\u7684\u4efb\u4f55\u6d88\u606f\u3002</p> <p>\u6709\u5173\u5185\u7f6e\u9a8c\u8bc1\u65b9\u6cd5\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605<a href="https://github.com/chriso/validator.js">the validator.js project</a> \u3002</p> <p>*<em>\u63d0\u793a: *</em>\u60a8\u8fd8\u53ef\u4ee5\u4e3a\u65e5\u5fd7\u8bb0\u5f55\u90e8\u5206\u5b9a\u4e49\u81ea\u5b9a\u4e49\u51fd\u6570\u3002 \u53ea\u662f\u4f20\u9012\u4e00\u4e2a\u65b9\u6cd5\u3002 \u7b2c\u4e00\u4e2a\u53c2\u6570\u5c06\u662f\u8bb0\u5f55\u7684\u5b57\u7b26\u4e32\u3002</p> <h3 id="\u9a8c\u8bc1\u5668-\u4e0e-allownull">\u9a8c\u8bc1\u5668 \u4e0e <code>allowNull</code></h3> <p>\u5982\u679c\u6a21\u578b\u7684\u7279\u5b9a\u5b57\u6bb5\u8bbe\u7f6e\u4e3a\u5141\u8bb8null\uff08\u4f7f\u7528<code>allowNull\uff1atrue</code>\uff09\uff0c\u5e76\u4e14\u8be5\u503c\u5df2\u8bbe\u7f6e\u4e3a<code>null</code>\uff0c\u5219\u5176\u9a8c\u8bc1\u5668\u4e0d\u4f1a\u8fd0\u884c\u3002 \u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u6bb5\u6765\u9a8c\u8bc1\u5176\u957f\u5ea6\u81f3\u5c11\u4e3a5\u4e2a\u5b57\u7b26\uff0c\u4f46\u4e5f\u5141\u8bb8<code>null</code>\u3002</p> <h3 id="\u6a21\u578b\u9a8c\u8bc1">\u6a21\u578b\u9a8c\u8bc1</h3> <p>\u9a8c\u8bc1\u5668\u4e5f\u53ef\u4ee5\u5728\u7279\u5b9a\u5b57\u6bb5\u9a8c\u8bc1\u5668\u4e4b\u540e\u7528\u6765\u5b9a\u4e49\u68c0\u67e5\u6a21\u578b\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u786e\u4fdd<code>\u7eac\u5ea6</code>\u548c<code>\u7ecf\u5ea6</code>\u90fd\u4e0d\u8bbe\u7f6e\uff0c\u6216\u8005\u4e24\u8005\u90fd\u8bbe\u7f6e\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u800c\u53e6\u4e00\u4e2a\u672a\u8bbe\u7f6e\u5219\u9a8c\u8bc1\u5931\u8d25\u3002</p> <p>\u6a21\u578b\u9a8c\u8bc1\u5668\u65b9\u6cd5\u4e0e\u6a21\u578b\u5bf9\u8c61\u7684\u4e0a\u4e0b\u6587\u4e00\u8d77\u8c03\u7528\uff0c\u5982\u679c\u5b83\u4eec\u629b\u51fa\u9519\u8bef\uff0c\u5219\u8ba4\u4e3a\u5931\u8d25\uff0c\u5426\u5219\u901a\u8fc7\u3002 \u8fd9\u4e0e\u81ea\u5b9a\u4e49\u5b57\u6bb5\u7279\u5b9a\u7684\u9a8c\u8bc1\u5668\u4e00\u6837\u3002</p> <p>\u6240\u6536\u96c6\u7684\u4efb\u4f55\u9519\u8bef\u6d88\u606f\u90fd\u5c06\u4e0e\u9a8c\u8bc1\u7ed3\u679c\u5bf9\u8c61\u4e00\u8d77\u653e\u5728\u5b57\u6bb5\u9a8c\u8bc1\u9519\u8bef\u4e2d\uff0c\u8fd9\u4e2a\u9519\u8bef\u4f7f\u7528\u5728<code>validate</code>\u53c2\u6570\u5bf9\u8c61\u4e2d\u4ee5\u5931\u8d25\u7684\u9a8c\u8bc1\u65b9\u6cd5\u7684\u952e\u6765\u547d\u540d\u3002\u5373\u4fbf\u5728\u4efb\u4f55\u4e00\u4e2a\u65f6\u523b\uff0c\u6bcf\u4e2a\u6a21\u578b\u9a8c\u8bc1\u65b9\u6cd5\u53ea\u80fd\u6709\u4e00\u4e2a\u9519\u8bef\u6d88\u606f\uff0c\u5b83\u4f1a\u5728\u6570\u7ec4\u4e2d\u663e\u793a\u4e3a\u5355\u4e2a\u5b57\u7b26\u4e32\u9519\u8bef\uff0c\u4ee5\u6700\u5927\u5316\u4e0e\u5b57\u6bb5\u9519\u8bef\u7684\u4e00\u81f4\u6027\u3002</p> <p>\u4e00\u4e2a\u4f8b\u5b50:</p> <pre><code class="language-js">const Pub = Sequelize.define(&#39;pub&#39;, {\n  name: { type: Sequelize.STRING },\n  address: { type: Sequelize.STRING },\n  latitude: {\n    type: Sequelize.INTEGER,\n    allowNull: true,\n    defaultValue: null,\n    validate: { min: -90, max: 90 }\n  },\n  longitude: {\n    type: Sequelize.INTEGER,\n    allowNull: true,\n    defaultValue: null,\n    validate: { min: -180, max: 180 }\n  },\n}, {\n  validate: {\n    bothCoordsOrNone() {\n      if ((this.latitude === null) !== (this.longitude === null)) {\n        throw new Error(&#39;Require either both latitude and longitude or neither&#39;)\n      }\n    }\n  }\n})</code></pre> <p>\u5728\u8fd9\u79cd\u7b80\u5355\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u7ed9\u5b9a\u7eac\u5ea6\u6216\u7ecf\u5ea6\uff0c\u800c\u4e0d\u662f\u540c\u65f6\u5305\u542b\u4e24\u8005\uff0c\u5219\u9a8c\u8bc1\u5931\u8d25\u3002 \u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u6784\u5efa\u4e00\u4e2a\u8d85\u8303\u56f4\u7684\u7eac\u5ea6\u548c\u7ecf\u5ea6\uff0c\u90a3\u4e48<code>raging_bullock_arms.validate()</code>\u53ef\u80fd\u4f1a\u8fd4\u56de</p> <pre><code class="language-js">{\n  &#39;latitude&#39;: [&#39;Invalid number: latitude&#39;],\n  &#39;bothCoordsOrNone&#39;: [&#39;Require either both latitude and longitude or neither&#39;]\n}</code></pre> <h2 id="\u914d\u7f6e">\u914d\u7f6e</h2> <p>\u4f60\u8fd8\u53ef\u4ee5\u4fee\u6539 Sequelize \u5904\u7406\u5217\u540d\u79f0\u7684\u65b9\u5f0f\uff1a</p> <pre><code class="language-js">const Bar = sequelize.define(&#39;bar&#39;, { /* bla */ }, {\n  // \u4e0d\u6dfb\u52a0\u65f6\u95f4\u6233\u5c5e\u6027 (updatedAt, createdAt)\n  timestamps: false,\n\n  // \u4e0d\u5220\u9664\u6570\u636e\u5e93\u6761\u76ee\uff0c\u4f46\u5c06\u65b0\u6dfb\u52a0\u7684\u5c5e\u6027deletedAt\u8bbe\u7f6e\u4e3a\u5f53\u524d\u65e5\u671f\uff08\u5220\u9664\u5b8c\u6210\u65f6\uff09\u3002 \n  // paranoid \u53ea\u6709\u5728\u542f\u7528\u65f6\u95f4\u6233\u65f6\u624d\u80fd\u5de5\u4f5c\n  paranoid: true,\n\n  // \u4e0d\u4f7f\u7528\u9a7c\u5cf0\u6837\u5f0f\u81ea\u52a8\u6dfb\u52a0\u5c5e\u6027\uff0c\u800c\u662f\u4e0b\u5212\u7ebf\u6837\u5f0f\uff0c\u56e0\u6b64updatedAt\u5c06\u53d8\u4e3aupdated_at\n  underscored: true,\n\n  // \u7981\u7528\u4fee\u6539\u8868\u540d; \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0csequelize\u5c06\u81ea\u52a8\u5c06\u6240\u6709\u4f20\u9012\u7684\u6a21\u578b\u540d\u79f0\uff08define\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff09\u8f6c\u6362\u4e3a\u590d\u6570\u3002 \u5982\u679c\u4f60\u4e0d\u60f3\u8fd9\u6837\uff0c\u8bf7\u8bbe\u7f6e\u4ee5\u4e0b\u5185\u5bb9\n  freezeTableName: true,\n\n  // \u5b9a\u4e49\u8868\u7684\u540d\u79f0\n  tableName: &#39;my_very_custom_table_name&#39;,\n\n  // \u542f\u7528\u4e50\u89c2\u9501\u5b9a\u3002 \u542f\u7528\u65f6\uff0csequelize\u5c06\u5411\u6a21\u578b\u6dfb\u52a0\u7248\u672c\u8ba1\u6570\u5c5e\u6027\uff0c\n  // \u5e76\u5728\u4fdd\u5b58\u8fc7\u65f6\u7684\u5b9e\u4f8b\u65f6\u5f15\u53d1OptimisticLockingError\u9519\u8bef\u3002\n  // \u8bbe\u7f6e\u4e3atrue\u6216\u5177\u6709\u8981\u7528\u4e8e\u542f\u7528\u7684\u5c5e\u6027\u540d\u79f0\u7684\u5b57\u7b26\u4e32\u3002\n  version: true\n})</code></pre> <p>\u5982\u679c\u4f60\u5e0c\u671bsequelize\u5904\u7406\u65f6\u95f4\u6233\uff0c\u4f46\u53ea\u60f3\u8981\u5176\u4e2d\u4e00\u90e8\u5206\uff0c\u6216\u8005\u5e0c\u671b\u60a8\u7684\u65f6\u95f4\u6233\u88ab\u79f0\u4e3a\u522b\u7684\u4e1c\u897f\uff0c\u5219\u53ef\u4ee5\u5355\u72ec\u8986\u76d6\u6bcf\u4e2a\u5217\uff1a</p> <pre><code class="language-js">const Foo = sequelize.define(&#39;foo&#39;,  { /* bla */ }, {\n  // \u4e0d\u8981\u5fd8\u8bb0\u542f\u7528\u65f6\u95f4\u6233\uff01\n  timestamps: true,\n\n  // \u6211\u4e0d\u60f3\u8981 createdAt\n  createdAt: false,\n\n  // \u6211\u60f3 updateAt \u5b9e\u9645\u4e0a\u88ab\u79f0\u4e3a updateTimestamp\n  updatedAt: &#39;updateTimestamp&#39;,\n\n  // \u5e76\u4e14\u5e0c\u671b deletedA t\u88ab\u79f0\u4e3a destroyTime\uff08\u8bf7\u8bb0\u4f4f\u542f\u7528paranoid\u4ee5\u4f7f\u5176\u5de5\u4f5c\uff09\n  deletedAt: &#39;destroyTime&#39;,\n  paranoid: true\n})</code></pre> <p>\u60a8\u4e5f\u53ef\u4ee5\u66f4\u6539\u6570\u636e\u5e93\u5f15\u64ce\uff0c\u4f8b\u5982 \u53d8\u66f4\u5230\u5230MyISAM, \u9ed8\u8ba4\u503c\u662fInnoDB\u3002</p> <pre><code class="language-js">const Person = sequelize.define(&#39;person&#39;, { /* attributes */ }, {\n  engine: &#39;MYISAM&#39;\n})\n\n// \u6216\u5168\u5c40\u7684\nconst sequelize = new Sequelize(db, user, pw, {\n  define: { engine: &#39;MYISAM&#39; }\n})</code></pre> <p>\u6700\u540e\uff0c\u60a8\u53ef\u4ee5\u4e3aMySQL\u548cPG\u4e2d\u7684\u8868\u6307\u5b9a\u6ce8\u91ca</p> <pre><code class="language-js">const Person = sequelize.define(&#39;person&#39;, { /* attributes */ }, {\n  comment: &quot;I&#39;m a table comment!&quot;\n})</code></pre> <h2 id="\u5bfc\u5165">\u5bfc\u5165</h2> <p>\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528<code>import</code>\u65b9\u6cd5\u5c06\u6a21\u578b\u5b9a\u4e49\u5b58\u50a8\u5728\u5355\u4e2a\u6587\u4ef6\u4e2d\u3002 \u8fd4\u56de\u7684\u5bf9\u8c61\u4e0e\u5bfc\u5165\u6587\u4ef6\u7684\u529f\u80fd\u4e2d\u5b9a\u4e49\u7684\u5b8c\u5168\u76f8\u540c\u3002 \u7531\u4e8eSequelize<code>v1:5.0</code>\u7684\u5bfc\u5165\u662f\u88ab\u7f13\u5b58\u7684\uff0c\u6240\u4ee5\u5f53\u8c03\u7528\u6587\u4ef6\u5bfc\u5165\u4e24\u6b21\u6216\u66f4\u591a\u6b21\u65f6\uff0c\u4e0d\u4f1a\u9047\u5230\u95ee\u9898\u3002</p> <pre><code class="language-js">// \u5728\u4f60\u7684\u670d\u52a1\u5668\u6587\u4ef6\u4e2d - \u4f8b\u5982 app.js\nconst Project = sequelize.import(__dirname + &quot;/path/to/models/project&quot;)\n\n// \u6a21\u578b\u5df2\u7ecf\u5728 /path/to/models/project.js \u4e2d\u5b9a\u4e49\u597d\n// \u4f60\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\uff0cDataTypes\u4e0e\u4e0a\u8ff0\u76f8\u540c\nmodule.exports = (sequelize, DataTypes) =&gt; {\n  return sequelize.define(&quot;project&quot;, {\n    name: DataTypes.STRING,\n    description: DataTypes.TEXT\n  })\n}</code></pre> <p><code>import</code>\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u63a5\u53d7\u56de\u8c03\u4f5c\u4e3a\u53c2\u6570\u3002</p> <pre><code class="language-js">sequelize.import(&#39;project&#39;, (sequelize, DataTypes) =&gt; {\n  return sequelize.define(&quot;project&quot;, {\n    name: DataTypes.STRING,\n    description: DataTypes.TEXT\n  })\n})</code></pre> <p>\u8fd9\u4e2a\u989d\u5916\u7684\u529f\u80fd\u4e5f\u662f\u6709\u7528\u7684, \u4f8b\u5982 <code>Error: Cannot find module</code> \u88ab\u629b\u51fa\uff0c\u5373\u4f7f <code>/path/to/models/project</code> \u770b\u8d77\u6765\u662f\u6b63\u786e\u7684\u3002 \u4e00\u4e9b\u6846\u67b6\uff0c\u5982 Meteor\uff0c\u91cd\u8f7d <code>require</code>\uff0c\u5e76\u7ed9\u51fa\u201c\u60ca\u559c\u201d\u7684\u7ed3\u679c\uff0c\u5982\uff1a</p> <pre><code>Error: Cannot find module &#39;/home/you/meteorApp/.meteor/local/build/programs/server/app/path/to/models/project.js&#39;</code></pre><p>\u8fd9\u901a\u8fc7\u4f20\u5165Meteor\u7684<code>require</code>\u7248\u672c\u6765\u89e3\u51b3. \u6240\u4ee5\uff0c\u867d\u7136\u8fd9\u53ef\u80fd\u4f1a\u5931\u8d25 ...</p> <pre><code class="language-js">const AuthorModel = db.import(&#39;./path/to/models/project&#39;);</code></pre> <p>... \u8fd9\u5e94\u8be5\u662f\u6210\u529f\u7684 ...</p> <pre><code class="language-js">const AuthorModel = db.import(&#39;project&#39;, require(&#39;./path/to/models/project&#39;));</code></pre> <h2 id="\u4e50\u89c2\u9501\u5b9a">\u4e50\u89c2\u9501\u5b9a</h2> <p>Sequelize \u5185\u7f6e\u652f\u6301\u901a\u8fc7\u6a21\u578b\u5b9e\u4f8b\u7248\u672c\u8ba1\u6570\u7684\u4e50\u89c2\u9501\u5b9a\u3002</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7981\u7528\u4e50\u89c2\u9501\u5b9a\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u7279\u5b9a\u6a21\u578b\u5b9a\u4e49\u6216\u5168\u5c40\u6a21\u578b\u914d\u7f6e\u4e2d\u5c06<code>version</code>\u5c5e\u6027\u8bbe\u7f6e\u4e3atrue\u6765\u542f\u7528\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605<a href="/manual/tutorial/models-definition.html#configuration">\u6a21\u578b\u914d\u7f6e</a>\u3002</p> <p>\u4e50\u89c2\u9501\u5b9a\u5141\u8bb8\u5e76\u53d1\u8bbf\u95ee\u6a21\u578b\u8bb0\u5f55\u4ee5\u8fdb\u884c\u7f16\u8f91\uff0c\u5e76\u9632\u6b62\u51b2\u7a81\u8986\u76d6\u6570\u636e\u3002 \u5b83\u901a\u8fc7\u68c0\u67e5\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u662f\u5426\u5df2\u7ecf\u8bfb\u53d6\u8bb0\u5f55\u800c\u8fdb\u884c\u66f4\u6539\uff0c\u5e76\u5728\u68c0\u6d4b\u5230\u51b2\u7a81\u65f6\u629b\u51fa\u4e00\u4e2aOptimisticLockError\u3002</p> <h2 id="\u6570\u636e\u5e93\u540c\u6b65">\u6570\u636e\u5e93\u540c\u6b65</h2> <p>\u5f53\u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u9879\u76ee\u65f6\uff0c\u4f60\u8fd8\u4e0d\u4f1a\u6709\u4e00\u4e2a\u6570\u636e\u5e93\u7ed3\u6784\uff0c\u5e76\u4e14\u4f7f\u7528Sequelize\u4f60\u4e5f\u4e0d\u9700\u8981\u5b83\u3002 \u53ea\u9700\u6307\u5b9a\u60a8\u7684\u6a21\u578b\u7ed3\u6784\uff0c\u5e76\u8ba9\u5e93\u5b8c\u6210\u5176\u4f59\u64cd\u4f5c\u3002 \u76ee\u524d\u652f\u6301\u7684\u662f\u521b\u5efa\u548c\u5220\u9664\u8868\uff1a</p> <pre><code class="language-js">// \u521b\u5efa\u8868:\nProject.sync()\nTask.sync()\n\n// \u5f3a\u5236\u521b\u5efa!\nProject.sync({force: true}) // \u8fd9\u5c06\u5148\u4e22\u5f03\u8868\uff0c\u7136\u540e\u91cd\u65b0\u521b\u5efa\u5b83\n\n// \u5220\u9664\u8868:\nProject.drop()\nTask.drop()\n\n// \u4e8b\u4ef6\u5904\u7406:\nProject.[sync|drop]().then(() =&gt; {\n  // \u597d\u5427...\u4e00\u5207\u90fd\u5f88\u597d\uff01\n}).catch(error =&gt; {\n  // oooh\uff0c\u4f60\u8f93\u5165\u4e86\u9519\u8bef\u7684\u6570\u636e\u5e93\u51ed\u636e\uff1f\n})</code></pre> <p>\u56e0\u4e3a\u540c\u6b65\u548c\u5220\u9664\u6240\u6709\u7684\u8868\u53ef\u80fd\u8981\u5199\u5f88\u591a\u884c\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8ba9Sequelize\u6765\u4e3a\u505a\u8fd9\u4e9b\uff1a</p> <pre><code class="language-js">// \u540c\u6b65\u6240\u6709\u5c1a\u672a\u5728\u6570\u636e\u5e93\u4e2d\u7684\u6a21\u578b\nsequelize.sync()\n\n// \u5f3a\u5236\u540c\u6b65\u6240\u6709\u6a21\u578b\nsequelize.sync({force: true})\n\n// \u5220\u9664\u6240\u6709\u8868\nsequelize.drop()\n\n// \u5e7f\u64ad\u5904\u7406:\nsequelize.[sync|drop]().then(() =&gt; {\n  // woot woot\n}).catch(error =&gt; {\n  // whooops\n})</code></pre> <p>\u56e0\u4e3a<code>.sync({ force: true })</code>\u662f\u5177\u6709\u7834\u574f\u6027\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4f7f\u7528<code>match</code>\u53c2\u6570\u4f5c\u4e3a\u9644\u52a0\u7684\u5b89\u5168\u68c0\u67e5\u3002</p> <p><code>match</code>\u53c2\u6570\u53ef\u4ee5\u901a\u77e5Sequelize\uff0c\u4ee5\u4fbf\u5728\u540c\u6b65\u4e4b\u524d\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0e\u6570\u636e\u5e93\u540d\u79f0 - \u5728\u6d4b\u8bd5\u4e2d\u4f7f\u7528<code>force\uff1atrue</code>\u4f46\u4e0d\u4f7f\u7528\u5b9e\u65f6\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u7684\u5b89\u5168\u68c0\u67e5\u3002</p> <pre><code class="language-js">// \u53ea\u6709\u5f53\u6570\u636e\u5e93\u540d\u79f0\u4ee5&#39;_test&#39;\u7ed3\u5c3e\u65f6\uff0c\u624d\u4f1a\u8fd0\u884c.sync\uff08\uff09\nsequelize.sync({ force: true, match: /_test$/ });</code></pre> <h2 id="\u6269\u5c55\u6a21\u578b">\u6269\u5c55\u6a21\u578b</h2> <p>Sequelize \u6a21\u578b\u662fES6\u7c7b\u3002 \u60a8\u53ef\u4ee5\u8f7b\u677e\u6dfb\u52a0\u81ea\u5b9a\u4e49\u5b9e\u4f8b\u6216\u7c7b\u7ea7\u522b\u7684\u65b9\u6cd5\u3002</p> <pre><code class="language-js">const User = sequelize.define(&#39;user&#39;, { firstname: Sequelize.STRING });\n\n// \u6dfb\u52a0\u4e00\u4e2a\u7c7b\u7ea7\u522b\u7684\u65b9\u6cd5\nUser.classLevelMethod = function() {\n  return &#39;foo&#39;;\n};\n\n// \u6dfb\u52a0\u5b9e\u4f8b\u7ea7\u522b\u65b9\u6cd5\nUser.prototype.instanceLevelMethod = function() {\n  return &#39;bar&#39;;\n};</code></pre> <p>\u5f53\u7136\uff0c\u60a8\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u5b9e\u4f8b\u7684\u6570\u636e\u5e76\u751f\u6210\u865a\u62df\u7684getter:</p> <pre><code class="language-js">const User = sequelize.define(&#39;user&#39;, { firstname: Sequelize.STRING, lastname: Sequelize.STRING });\n\nUser.prototype.getFullname = function() {\n  return [this.firstname, this.lastname].join(&#39; &#39;);\n};\n\n// \u4f8b\u5b50:\nUser.build({ firstname: &#39;foo&#39;, lastname: &#39;bar&#39; }).getFullname() // &#39;foo bar&#39;</code></pre> <h3 id="\u7d22\u5f15">\u7d22\u5f15</h3> <p>Sequelize\u652f\u6301\u5728 <code>Model.sync()</code> \u6216 <code>sequelize.sync</code> \u4e2d\u521b\u5efa\u7684\u6a21\u578b\u5b9a\u4e49\u4e2d\u6dfb\u52a0\u7d22\u5f15\u3002</p> <pre><code class="language-js">sequelize.define(&#39;user&#39;, {}, {\n  indexes: [\n    // \u5728 email \u4e0a\u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7d22\u5f15\n    {\n      unique: true,\n      fields: [&#39;email&#39;]\n    },\n\n    // \u5728\u4f7f\u7528 jsonb_path_ops \u7684 operator \u6570\u636e\u4e0a\u521b\u5efa\u4e00\u4e2a gin \u7d22\u5f15\n    {\n      fields: [&#39;data&#39;],\n      using: &#39;gin&#39;,\n      operator: &#39;jsonb_path_ops&#39;\n    },\n\n    // \u9ed8\u8ba4\u7684\u7d22\u5f15\u540d\u5c06\u662f [table]_[fields]\n    // \u521b\u5efa\u591a\u5217\u5c40\u90e8\u7d22\u5f15\n    {\n      name: &#39;public_by_author&#39;,\n      fields: [&#39;author&#39;, &#39;status&#39;],\n      where: {\n        status: &#39;public&#39;\n      }\n    },\n\n    // \u5177\u6709\u6709\u5e8f\u5b57\u6bb5\u7684BTREE\u7d22\u5f15\n    {\n      name: &#39;title_index&#39;,\n      method: &#39;BTREE&#39;,\n      fields: [&#39;author&#39;, {attribute: &#39;title&#39;, collate: &#39;en_US&#39;, order: &#39;DESC&#39;, length: 5}]\n    }\n  ]\n})</code></pre> ';e.exports=t}}]);