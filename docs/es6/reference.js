(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["docs/es6/reference"],{fAlM:function(e,a){var t='<h1 id="\u53c2\u8003\u94fe\u63a5">\u53c2\u8003\u94fe\u63a5</h1> <h2 id="\u5b98\u65b9\u6587\u4ef6">\u5b98\u65b9\u6587\u4ef6</h2> <ul> <li><a href="http://www.ecma-international.org/ecma-262/6.0/index.html">ECMAScript\xae 2015 Language Specification</a>: ECMAScript 2015 \u89c4\u683c</li> <li><a href="http://www.ecma-international.org/ecma-262/7.0/">ECMAScript\xae 2016 Language Specification</a>: ECMAScript 2016 \u89c4\u683c</li> <li><a href="https://tc39.github.io/ecma262/">ECMAScript\xae 2017 Language Specification</a>\uff1aECMAScript 2017 \u89c4\u683c\uff08\u8349\u6848\uff09</li> <li><a href="https://github.com/tc39/ecma262">ECMAScript Current Proposals</a>: ECMAScript \u5f53\u524d\u7684\u6240\u6709\u63d0\u6848</li> <li><a href="https://github.com/tc39/proposals">ECMAScript Active Proposals</a>: \u5df2\u7ecf\u8fdb\u5165\u6b63\u5f0f\u6d41\u7a0b\u7684\u63d0\u6848</li> <li><a href="https://github.com/hemanth/es-next">ECMAscript proposals</a>\uff1a\u4ece\u9636\u6bb5 0 \u5230\u9636\u6bb5 4 \u7684\u6240\u6709\u63d0\u6848\u5217\u8868</li> <li><a href="https://github.com/tc39/agendas">TC39 meeting agendas</a>: TC39 \u59d4\u5458\u4f1a\u5386\u5e74\u7684\u4f1a\u8bae\u8bb0\u5f55</li> <li><a href="https://ecmascript-daily.github.io/">ECMAScript Daily</a>: TC39 \u59d4\u5458\u4f1a\u7684\u52a8\u6001</li> <li><a href="https://tc39.github.io/process-document/">The TC39 Process</a>: \u63d0\u6848\u8fdb\u5165\u6b63\u5f0f\u89c4\u683c\u7684\u6d41\u7a0b</li> <li><a href="https://thefeedbackloop.xyz/tc39-a-process-sketch-stages-0-and-1/">TC39: A Process Sketch, Stages 0 and 1</a>: Stage 0 \u548c Stage 1 \u7684\u542b\u4e49</li> <li><a href="https://thefeedbackloop.xyz/tc39-process-sketch-stage-2/">TC39 Process Sketch, Stage 2</a>: Stage 2 \u7684\u542b\u4e49</li> </ul> <h2 id="\u7efc\u5408\u4ecb\u7ecd">\u7efc\u5408\u4ecb\u7ecd</h2> <ul> <li>Axel Rauschmayer, <a href="http://exploringjs.com/es6/">Exploring ES6: Upgrade to the next version of JavaScript</a>: ES6 \u7684\u4e13\u8457\uff0c\u672c\u4e66\u7684\u8bb8\u591a\u4ee3\u7801\u5b9e\u4f8b\u6765\u81ea\u8be5\u4e66</li> <li>Sayanee Basu, <a href="http://net.tutsplus.com/articles/news/ecmascript-6-today/">Use ECMAScript 6 Today</a></li> <li>Ariya Hidayat, <a href="http://www.sencha.com/blog/toward-modern-web-apps-with-ecmascript-6/">Toward Modern Web Apps with ECMAScript 6</a></li> <li>Dale Schouten, <a href="http://html5hub.com/10-ecmascript-6-tricks-you-can-perform-right-now/">10 Ecmascript-6 tricks you can perform right now</a></li> <li>Colin Toh, <a href="http://colintoh.com/blog/lightweight-es6-features">Lightweight ES6 Features That Pack A Punch</a>: ES6 \u7684\u4e00\u4e9b\u201c\u8f7b\u91cf\u7ea7\u201d\u7684\u7279\u6027\u4ecb\u7ecd</li> <li>Domenic Denicola, <a href="http://www.slideshare.net/domenicdenicola/es6-the-awesome-parts">ES6: The Awesome Parts</a></li> <li>Nicholas C. Zakas, <a href="https://github.com/nzakas/understandinges6">Understanding ECMAScript 6</a></li> <li>Justin Drake, <a href="https://github.com/JustinDrake/node-es6-examples">ECMAScript 6 in Node.JS</a></li> <li>Ryan Dao, <a href="http://ryandao.net/portal/content/summary-ecmascript-6-major-features">Summary of ECMAScript 6 major features</a></li> <li>Luke Hoban, <a href="https://github.com/lukehoban/es6features">ES6 features</a>: ES6 \u65b0\u8bed\u6cd5\u70b9\u7684\u7f57\u5217</li> <li>Traceur-compiler, <a href="https://github.com/google/traceur-compiler/wiki/LanguageFeatures">Language Features</a>: Traceur \u6587\u6863\u5217\u51fa\u7684\u4e00\u4e9b ES6 \u4f8b\u5b50</li> <li>Axel Rauschmayer, <a href="https://speakerdeck.com/rauschma/ecmascript-6-whats-next-for-javascript-august-2014">ECMAScript 6: what\u2019s next for JavaScript?</a>: \u5173\u4e8e ES6 \u65b0\u589e\u8bed\u6cd5\u7684\u7efc\u5408\u4ecb\u7ecd\uff0c\u6709\u5f88\u591a\u4f8b\u5b50</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2015/08/getting-started-es6.html">Getting started with ECMAScript 6</a>: ES6 \u8bed\u6cd5\u70b9\u7684\u7efc\u5408\u4ecb\u7ecd</li> <li>Toby Ho, <a href="http://davidwalsh.name/es6-io">ES6 in io.js</a></li> <li>Guillermo Rauch, <a href="http://rauchg.com/2015/ecmascript-6/">ECMAScript 6</a></li> <li>Charles King, <a href="http://charlesbking.com/power_of_es6/#/">The power of ECMAScript 6</a></li> <li>Benjamin De Cock, <a href="https://github.com/bendc/frontend-guidelines">Frontend Guidelines</a>: ES6 \u6700\u4f73\u5b9e\u8df5</li> <li>Jani Hartikainen, <a href="http://codeutopia.net/blog/2015/01/06/es6-what-are-the-benefits-of-the-new-features-in-practice/">ES6: What are the benefits of the new features in practice?</a></li> <li>kangax, <a href="http://perfectionkills.com/javascript-quiz-es6/">Javascript quiz. ES6 edition</a>: ES6 \u5c0f\u6d4b\u8bd5</li> <li>Jeremy Fairbank, <a href="https://speakerdeck.com/jfairbank/html5devconf-es7-and-beyond">HTML5DevConf ES7 and Beyond!</a>: ES7 \u65b0\u589e\u8bed\u6cd5\u70b9\u4ecb\u7ecd</li> </ul> <h2 id="let-\u548c-const">let \u548c const</h2> <ul> <li>Kyle Simpson, <a href="http://davidwalsh.name/for-and-against-let">For and against let</a>: \u8ba8\u8bba let \u547d\u4ee4\u7684\u4f5c\u7528\u57df</li> <li>kangax, <a href="http://es-discourse.com/t/why-typeof-is-no-longer-safe/15">Why typeof is no longer \u201csafe\u201d</a>: \u8ba8\u8bba\u5728\u5757\u7ea7\u4f5c\u7528\u57df\u5185\uff0clet \u547d\u4ee4\u7684\u53d8\u91cf\u58f0\u660e\u548c\u8d4b\u503c\u7684\u884c\u4e3a</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2015/02/es6-scoping.html">Variables and scoping in ECMAScript 6</a>: \u8ba8\u8bba\u5757\u7ea7\u4f5c\u7528\u57df\u4e0e let \u548c const \u7684\u884c\u4e3a</li> <li>Nicolas Bevacqua, <a href="http://ponyfoo.com/articles/es6-let-const-and-temporal-dead-zone-in-depth">ES6 Let, Const and the \u201cTemporal Dead Zone\u201d (TDZ) in Depth</a></li> <li>acorn, <a href="https://github.com/ternjs/acorn/issues/118">Function statements in strict mode</a>: \u5757\u7ea7\u4f5c\u7528\u57df\u5bf9\u4e25\u683c\u6a21\u5f0f\u7684\u51fd\u6570\u58f0\u660e\u7684\u5f71\u54cd</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2016/09/global.html">ES proposal: global</a>: \u9876\u5c42\u5bf9\u8c61<code>global</code></li> </ul> <h2 id="\u89e3\u6784\u8d4b\u503c">\u89e3\u6784\u8d4b\u503c</h2> <ul> <li>Nick Fitzgerald, <a href="http://fitzgeraldnick.com/weblog/50/">Destructuring Assignment in ECMAScript 6</a>: \u8be6\u7ec6\u4ecb\u7ecd\u89e3\u6784\u8d4b\u503c\u7684\u7528\u6cd5</li> <li>Nicholas C. Zakas, <a href="https://www.nczonline.net/blog/2015/10/ecmascript-6-destructuring-gotcha/">ECMAScript 6 destructuring gotcha</a></li> </ul> <h2 id="\u5b57\u7b26\u4e32">\u5b57\u7b26\u4e32</h2> <ul> <li>Nicholas C. Zakas, <a href="http://www.nczonline.net/blog/2012/08/01/a-critical-review-of-ecmascript-6-quasi-literals/">A critical review of ECMAScript 6 quasi-literals</a></li> <li>Mozilla Developer Network, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings">Template strings</a></li> <li>Addy Osmani, <a href="http://updates.html5rocks.com/2015/01/ES6-Template-Strings">Getting Literal With ES6 Template Strings</a>: \u6a21\u677f\u5b57\u7b26\u4e32\u7684\u4ecb\u7ecd</li> <li>Blake Winton, <a href="https://weblog.latte.ca/blake/tech/firefox/templates.html">ES6 Templates</a>: \u6a21\u677f\u5b57\u7b26\u4e32\u7684\u4ecb\u7ecd</li> <li>Peter Jaszkowiak, <a href="https://medium.com/@PitaJ/how-to-write-a-template-compiler-in-javascript-f174df6f32f">How to write a template compiler in JavaScript</a>: \u4f7f\u7528\u6a21\u677f\u5b57\u7b26\u4e32\uff0c\u7f16\u5199\u4e00\u4e2a\u6a21\u677f\u7f16\u8bd1\u51fd\u6570</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2015/11/string-padding.html">ES.stage3: string padding</a></li> </ul> <h2 id="\u6b63\u5219">\u6b63\u5219</h2> <ul> <li>Mathias Bynens, <a href="https://mathiasbynens.be/notes/es6-unicode-regex">Unicode-aware regular expressions in ES6</a>: \u8be6\u7ec6\u4ecb\u7ecd\u6b63\u5219\u8868\u8fbe\u5f0f\u7684 u \u4fee\u9970\u7b26</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2015/07/regexp-es6.html">New regular expression features in ECMAScript 6</a>\uff1aES6 \u6b63\u5219\u7279\u6027\u7684\u8be6\u7ec6\u4ecb\u7ecd</li> <li>Yang Guo, <a href="http://v8project.blogspot.jp/2016/02/regexp-lookbehind-assertions.html">RegExp lookbehind assertions</a>\uff1a\u4ecb\u7ecd\u540e\u884c\u65ad\u8a00</li> <li>Axel Rauschmayer, <a href="http://2ality.com/2017/05/regexp-named-capture-groups.html">ES proposal: RegExp named capture groups</a>: \u5177\u540d\u7ec4\u5339\u914d\u7684\u4ecb\u7ecd</li> </ul> <h2 id="\u6570\u503c">\u6570\u503c</h2> <ul> <li>Nicolas Bevacqua, <a href="http://ponyfoo.com/articles/es6-number-improvements-in-depth">ES6 Number Improvements in Depth</a></li> <li>Axel Rauschmayer, <a href="http://2ality.com/2017/03/es-integer.html">ES proposal: arbitrary precision integers</a></li> </ul> <h2 id="\u6570\u7ec4">\u6570\u7ec4</h2> <ul> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2014/05/es6-array-methods.html">ECMAScript 6\u2019s new array methods</a>: \u5bf9 ES6 \u65b0\u589e\u7684\u6570\u7ec4\u65b9\u6cd5\u7684\u5168\u9762\u4ecb\u7ecd</li> <li>TC39, <a href="https://github.com/tc39/Array.prototype.includes/">Array.prototype.includes</a>: \u6570\u7ec4\u7684 includes \u65b9\u6cd5\u7684\u89c4\u683c</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2015/09/holes-arrays-es6.html">ECMAScript 6: holes in Arrays</a>: \u6570\u7ec4\u7684\u7a7a\u4f4d\u95ee\u9898</li> </ul> <h2 id="\u51fd\u6570">\u51fd\u6570</h2> <ul> <li>Nicholas C. Zakas, <a href="http://www.nczonline.net/blog/2013/09/10/understanding-ecmascript-6-arrow-functions/">Understanding ECMAScript 6 arrow functions</a></li> <li>Jack Franklin, <a href="http://javascriptplayground.com/blog/2014/04/real-life-es6-arrow-fn/">Real Life ES6 - Arrow Functions</a></li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2014/04/required-parameters-es6.html">Handling required parameters in ECMAScript 6</a></li> <li>Dmitry Soshnikov, <a href="http://dmitrysoshnikov.com/ecmascript/es6-notes-default-values-of-parameters/">ES6 Notes: Default values of parameters</a>: \u4ecb\u7ecd\u53c2\u6570\u7684\u9ed8\u8ba4\u503c</li> <li>Ragan Wald, <a href="http://raganwald.com/2015/02/02/destructuring.html">Destructuring and Recursion in ES6</a>: rest \u53c2\u6570\u548c\u6269\u5c55\u8fd0\u7b97\u7b26\u7684\u8be6\u7ec6\u4ecb\u7ecd</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2015/09/function-names-es6.html">The names of functions in ES6</a>: \u51fd\u6570\u7684 name \u5c5e\u6027\u7684\u8be6\u7ec6\u4ecb\u7ecd</li> <li>Kyle Simpson, <a href="http://blog.getify.com/arrow-this/">Arrow This</a>: \u7bad\u5934\u51fd\u6570\u5e76\u6ca1\u6709\u81ea\u5df1\u7684 this</li> <li>Derick Bailey, <a href="http://derickbailey.com/2015/09/28/do-es6-arrow-functions-really-solve-this-in-javascript/">Do ES6 Arrow Functions Really Solve \u201cthis\u201d In JavaScript?</a>\uff1a\u4f7f\u7528\u7bad\u5934\u51fd\u6570\u5904\u7406 this \u6307\u5411\uff0c\u5fc5\u987b\u975e\u5e38\u5c0f\u5fc3</li> <li>Mark McDonnell, <a href="http://www.integralist.co.uk/posts/js-recursion.html">Understanding recursion in functional JavaScript programming</a>: \u5982\u4f55\u81ea\u5df1\u5b9e\u73b0\u5c3e\u9012\u5f52\u4f18\u5316</li> <li>Nicholas C. Zakas, <a href="https://www.nczonline.net/blog/2016/10/the-ecmascript-2016-change-you-probably-dont-know/">The ECMAScript 2016 change you probably don&#39;t know</a>: \u4f7f\u7528\u53c2\u6570\u9ed8\u8ba4\u503c\u65f6\uff0c\u4e0d\u80fd\u5728\u51fd\u6570\u5185\u90e8\u663e\u5f0f\u5f00\u542f\u4e25\u683c\u6a21\u5f0f</li> <li>Axel Rauschmayer, <a href="http://2ality.com/2017/08/optional-catch-binding.html">ES proposal: optional catch binding</a></li> </ul> <h2 id="\u5bf9\u8c61">\u5bf9\u8c61</h2> <ul> <li>Addy Osmani, <a href="http://www.html5rocks.com/en/tutorials/es7/observe/">Data-binding Revolutions with Object.observe()</a>: \u4ecb\u7ecd Object.observe()\u7684\u6982\u5ff5</li> <li>Sella Rafaeli, <a href="http://www.sellarafaeli.com/blog/native_javascript_data_binding">Native JavaScript Data-Binding</a>: \u5982\u4f55\u4f7f\u7528 Object.observe \u65b9\u6cd5\uff0c\u5b9e\u73b0\u6570\u636e\u5bf9\u8c61\u4e0e DOM \u5bf9\u8c61\u7684\u53cc\u5411\u7ed1\u5b9a</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2015/09/proto-es6.html"><code>__proto__</code> in ECMAScript 6</a></li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2015/10/enumerability-es6.html">Enumerability in ECMAScript 6</a></li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2016/02/object-getownpropertydescriptors.html">ES proposal: Object.getOwnPropertyDescriptors()</a></li> <li>TC39, <a href="https://github.com/tc39/proposal-object-getownpropertydescriptors">Object.getOwnPropertyDescriptors Proposal</a></li> </ul> <h2 id="symbol">Symbol</h2> <ul> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2014/12/es6-symbols.html">Symbols in ECMAScript 6</a>: Symbol \u7b80\u4ecb</li> <li>MDN, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol">Symbol</a>: Symbol \u7c7b\u578b\u7684\u8be6\u7ec6\u4ecb\u7ecd</li> <li>Jason Orendorff, <a href="https://hacks.mozilla.org/2015/06/es6-in-depth-symbols/">ES6 In Depth: Symbols</a></li> <li>Keith Cirkel, <a href="http://blog.keithcirkel.co.uk/metaprogramming-in-es6-symbols/">Metaprogramming in ES6: Symbols and why they&#39;re awesome</a>: Symbol \u7684\u6df1\u5165\u4ecb\u7ecd</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2015/09/well-known-symbols-es6.html">Customizing ES6 via well-known symbols</a></li> <li>Derick Bailey, <a href="https://derickbailey.com/2016/03/09/creating-a-true-singleton-in-node-js-with-es6-symbols/">Creating A True Singleton In Node.js, With ES6 Symbols</a></li> <li>Das Surma, <a href="https://dassur.ma/things/reading-specs-2/">How to read web specs Part IIa \u2013 Or: ECMAScript Symbols</a>: \u4ecb\u7ecd Symbol \u7684\u89c4\u683c</li> </ul> <h2 id="set-\u548c-map">Set \u548c Map</h2> <ul> <li>Mozilla Developer Network, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet">WeakSet</a>\uff1a\u4ecb\u7ecd WeakSet \u6570\u636e\u7ed3\u6784</li> <li>Dwayne Charrington, <a href="http://ilikekillnerds.com/2015/02/what-are-weakmaps-in-es6/">What Are Weakmaps In ES6?</a>: WeakMap \u6570\u636e\u7ed3\u6784\u4ecb\u7ecd</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2015/01/es6-maps-sets.html">ECMAScript 6: maps and sets</a>: Set \u548c Map \u7ed3\u6784\u7684\u8be6\u7ec6\u4ecb\u7ecd</li> <li>Jason Orendorff, <a href="https://hacks.mozilla.org/2015/06/es6-in-depth-collections/">ES6 In Depth: Collections</a>\uff1aSet \u548c Map \u7ed3\u6784\u7684\u8bbe\u8ba1\u601d\u60f3</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2015/08/es6-map-json.html">Converting ES6 Maps to and from JSON</a>: \u5982\u4f55\u5c06 Map \u4e0e\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u4e92\u76f8\u8f6c\u6362</li> </ul> <h2 id="proxy-\u548c-reflect">Proxy \u548c Reflect</h2> <ul> <li>Nicholas C. Zakas, <a href="http://www.nczonline.net/blog/2014/04/22/creating-defensive-objects-with-es6-proxies/">Creating defensive objects with ES6 proxies</a></li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2014/12/es6-proxies.html">Meta programming with ECMAScript 6 proxies</a>: Proxy \u8be6\u89e3</li> <li>Daniel Zautner, <a href="http://dzautner.com/meta-programming-javascript-using-proxies/">Meta-programming JavaScript Using Proxies</a>: \u4f7f\u7528 Proxy \u5b9e\u73b0\u5143\u7f16\u7a0b</li> <li>Tom Van Cutsem, <a href="https://github.com/tvcutsem/harmony-reflect/wiki">Harmony-reflect</a>: Reflect \u5bf9\u8c61\u7684\u8bbe\u8ba1\u76ee\u7684</li> <li>Tom Van Cutsem, <a href="https://github.com/tvcutsem/harmony-reflect/blob/master/doc/traps.md">Proxy Traps</a>: Proxy \u62e6\u622a\u64cd\u4f5c\u4e00\u89c8</li> <li>Tom Van Cutsem, <a href="https://github.com/tvcutsem/harmony-reflect/blob/master/doc/api.md">Reflect API</a></li> <li>Tom Van Cutsem, <a href="https://github.com/tvcutsem/harmony-reflect/blob/master/doc/handler_api.md">Proxy Handler API</a></li> <li>Nicolas Bevacqua, <a href="http://ponyfoo.com/articles/es6-proxies-in-depth">ES6 Proxies in Depth</a></li> <li>Nicolas Bevacqua, <a href="http://ponyfoo.com/articles/es6-proxy-traps-in-depth">ES6 Proxy Traps in Depth</a></li> <li>Nicolas Bevacqua, <a href="http://ponyfoo.com/articles/more-es6-proxy-traps-in-depth">More ES6 Proxy Traps in Depth</a></li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2016/11/proxying-builtins.html">Pitfall: not all objects can be wrapped transparently by proxies</a></li> <li>Bertalan Miklos, <a href="https://blog.risingstack.com/writing-a-javascript-framework-data-binding-es6-proxy/">Writing a JavaScript Framework - Data Binding with ES6 Proxies</a>: \u4f7f\u7528 Proxy \u5b9e\u73b0\u89c2\u5bdf\u8005\u6a21\u5f0f</li> <li>Keith Cirkel, <a href="https://www.keithcirkel.co.uk/metaprogramming-in-es6-part-2-reflect/">Metaprogramming in ES6: Part 2 - Reflect</a>: Reflect API \u7684\u8be6\u7ec6\u4ecb\u7ecd</li> </ul> <h2 id="promise-\u5bf9\u8c61">Promise \u5bf9\u8c61</h2> <ul> <li>Jake Archibald, <a href="http://www.html5rocks.com/en/tutorials/es6/promises/">JavaScript Promises: There and back again</a></li> <li>Tilde, <a href="https://github.com/tildeio/rsvp.js">rsvp.js</a></li> <li>Sandeep Panda, <a href="http://www.sitepoint.com/overview-javascript-promises/">An Overview of JavaScript Promises</a>: ES6 Promise \u5165\u95e8\u4ecb\u7ecd</li> <li>Dave Atchley, <a href="http://www.datchley.name/es6-promises/">ES6 Promises</a>: Promise \u7684\u8bed\u6cd5\u4ecb\u7ecd</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2014/10/es6-promises-api.html">ECMAScript 6 promises (2/2): the API</a>: \u5bf9 ES6 Promise \u89c4\u683c\u548c\u7528\u6cd5\u7684\u8be6\u7ec6\u4ecb\u7ecd</li> <li>Jack Franklin, <a href="http://javascriptplayground.com/blog/2015/02/promises/">Embracing Promises in JavaScript</a>: catch \u65b9\u6cd5\u7684\u4f8b\u5b50</li> <li>Ronald Chen, <a href="https://medium.com/@pyrolistical/how-to-get-out-of-promise-hell-8c20e0ab0513#.2an1he6vf">How to escape Promise Hell</a>: \u5982\u4f55\u4f7f\u7528<code>Promise.all</code>\u65b9\u6cd5\u7684\u4e00\u4e9b\u5f88\u597d\u7684\u4f8b\u5b50</li> <li>Jordan Harband, <a href="https://github.com/ljharb/proposal-promise-try">proposal-promise-try</a>: Promise.try() \u65b9\u6cd5\u7684\u63d0\u6848</li> <li>Sven Slootweg, <a href="http://cryto.net/~joepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/">What is Promise.try, and why does it matter?</a>: Promise.try() \u65b9\u6cd5\u7684\u4f18\u70b9</li> <li>Yehuda Katz, <a href="https://thefeedbackloop.xyz/tc39-promises-promises/">TC39: Promises, Promises</a>: Promise.try() \u7684\u7528\u5904</li> </ul> <h2 id="iterator">Iterator</h2> <ul> <li>Mozilla Developer Network, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators">Iterators and generators</a></li> <li>Mozilla Developer Network, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/The_Iterator_protocol">The Iterator protocol</a></li> <li>Jason Orendorff, <a href="https://hacks.mozilla.org/2015/04/es6-in-depth-iterators-and-the-for-of-loop/">ES6 In Depth: Iterators and the for-of loop</a>: \u904d\u5386\u5668\u4e0e for...of \u5faa\u73af\u7684\u4ecb\u7ecd</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2013/06/iterators-generators.html">Iterators and generators in ECMAScript 6</a>: \u63a2\u8ba8 Iterator \u548c Generator \u7684\u8bbe\u8ba1\u76ee\u7684</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2015/02/es6-iteration.html">Iterables and iterators in ECMAScript 6</a>: Iterator \u7684\u8be6\u7ec6\u4ecb\u7ecd</li> <li>Kyle Simpson, <a href="http://blog.getify.com/iterating-es6-numbers/">Iterating ES6 Numbers</a>: \u5728\u6570\u503c\u5bf9\u8c61\u4e0a\u90e8\u7f72\u904d\u5386\u5668</li> </ul> <h2 id="generator">Generator</h2> <ul> <li>Matt Baker, <a href="http://flippinawesome.org/2014/02/10/replacing-callbacks-with-es6-generators/">Replacing callbacks with ES6 Generators</a></li> <li>Steven Sanderson, <a href="http://blog.stevensanderson.com/2013/12/21/experiments-with-koa-and-javascript-generators/">Experiments with Koa and JavaScript Generators</a></li> <li>jmar777, <a href="http://devsmash.com/blog/whats-the-big-deal-with-generators">What&#39;s the Big Deal with Generators?</a></li> <li>Marc Harter, <a href="http://strongloop.com/strongblog/how-to-generators-node-js-yield-use-cases/">Generators in Node.js: Common Misconceptions and Three Good Use Cases</a>: \u8ba8\u8bba Generator \u51fd\u6570\u7684\u4f5c\u7528</li> <li>StackOverflow, <a href="http://stackoverflow.com/questions/20977379/es6-yield-what-happens-to-the-arguments-of-the-first-call-next">ES6 yield : what happens to the arguments of the first call next()?</a>: \u7b2c\u4e00\u6b21\u4f7f\u7528 next \u65b9\u6cd5\u65f6\u4e0d\u80fd\u5e26\u6709\u53c2\u6570</li> <li>Kyle Simpson, <a href="http://davidwalsh.name/es6-generators">ES6 Generators: Complete Series</a>: \u7531\u6d45\u5165\u6df1\u63a2\u8ba8 Generator \u7684\u7cfb\u5217\u6587\u7ae0\uff0c\u5171\u56db\u7bc7</li> <li>Gajus Kuizinas, <a href="http://gajus.com/blog/2/the-definetive-guide-to-the-javascript-generators">The Definitive Guide to the JavaScript Generators</a>: \u5bf9 Generator \u7684\u7efc\u5408\u4ecb\u7ecd</li> <li>Jan Krems, <a href="https://gist.github.com/jkrems/04a2b34fb9893e4c2b5c">Generators Are Like Arrays</a>: \u8ba8\u8bba Generator \u53ef\u4ee5\u88ab\u5f53\u4f5c\u6570\u636e\u7ed3\u6784\u770b\u5f85</li> <li>Harold Cooper, <a href="http://syzygy.st/javascript-coroutines/">Coroutine Event Loops in Javascript</a>: Generator \u7528\u4e8e\u5b9e\u73b0\u72b6\u6001\u673a</li> <li>Ruslan Ismagilov, <a href="https://github.com/isRuslan/learn-generators">learn-generators</a>: \u7f16\u7a0b\u7ec3\u4e60\uff0c\u5171 6 \u9053\u9898</li> <li>Steven Sanderson, <a href="http://blog.stevensanderson.com/2013/12/21/experiments-with-koa-and-javascript-generators/">Experiments with Koa and JavaScript Generators</a>: Generator \u5165\u95e8\u4ecb\u7ecd\uff0c\u4ee5 Koa \u6846\u67b6\u4e3a\u4f8b</li> <li>Mahdi Dibaiee, <a href="http://dibaiee.ir/es7-array-generator-comprehensions/">ES7 Array and Generator comprehensions</a>\uff1aES7 \u7684 Generator \u63a8\u5bfc</li> <li>Nicolas Bevacqua, <a href="http://ponyfoo.com/articles/es6-generators-in-depth">ES6 Generators in Depth</a></li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2015/03/es6-generators.html">ES6 generators in depth</a>: Generator \u89c4\u683c\u7684\u8be6\u5c3d\u8bb2\u89e3</li> <li>Derick Bailey, <a href="https://derickbailey.com/2015/10/05/using-es6-generators-to-short-circuit-hierarchical-data-iteration/">Using ES6 Generators To Short-Circuit Hierarchical Data Iteration</a>\uff1a\u4f7f\u7528 for...of \u5faa\u73af\u5b8c\u6210\u9884\u5b9a\u7684\u64cd\u4f5c\u6b65\u9aa4</li> </ul> <h2 id="\u5f02\u6b65\u64cd\u4f5c\u548c-async-\u51fd\u6570">\u5f02\u6b65\u64cd\u4f5c\u548c Async \u51fd\u6570</h2> <ul> <li>Luke Hoban, <a href="https://github.com/lukehoban/ecmascript-asyncawait">Async Functions for ECMAScript</a>: Async \u51fd\u6570\u7684\u8bbe\u8ba1\u601d\u60f3\uff0c\u4e0e Promise\u3001Gernerator \u51fd\u6570\u7684\u5173\u7cfb</li> <li>Jafar Husain, <a href="https://github.com/jhusain/asyncgenerator">Asynchronous Generators for ES7</a>: Async \u51fd\u6570\u7684\u6df1\u5165\u8ba8\u8bba</li> <li>Nolan Lawson, <a href="http://pouchdb.com/2015/03/05/taming-the-async-beast-with-es7.html">Taming the asynchronous beast with ES7</a>: async \u51fd\u6570\u901a\u4fd7\u7684\u5b9e\u4f8b\u8bb2\u89e3</li> <li>Jafar Husain, <a href="https://docs.google.com/file/d/0B4PVbLpUIdzoMDR5dWstRllXblU/view?sle=true">Async Generators</a>: \u5bf9 async \u4e0e Generator \u6df7\u5408\u4f7f\u7528\u7684\u4e00\u4e9b\u8ba8\u8bba</li> <li>Daniel Brain, <a href="https://medium.com/@bluepnume/learn-about-promises-before-you-start-using-async-await-eb148164a9c8">Understand promises before you start using async/await</a>: \u8ba8\u8bba async/await \u4e0e Promise \u7684\u5173\u7cfb</li> <li>Jake Archibald, <a href="https://developers.google.com/web/fundamentals/getting-started/primers/async-functions">Async functions - making promises friendly</a></li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2016/10/asynchronous-iteration.html">ES proposal: asynchronous iteration</a>: \u5f02\u6b65\u904d\u5386\u5668\u7684\u8be6\u7ec6\u4ecb\u7ecd</li> <li>Dima Grossman, <a href="http://blog.grossman.io/how-to-write-async-await-without-try-catch-blocks-in-javascript/">How to write async await without try-catch blocks in Javascript</a>: \u9664\u4e86 try/catch \u4ee5\u5916\u7684 async \u51fd\u6570\u5185\u90e8\u6355\u6349\u9519\u8bef\u7684\u65b9\u6cd5</li> </ul> <h2 id="class">Class</h2> <ul> <li>Sebastian Porto, <a href="https://reinteractive.net/posts/235-es6-classes-and-javascript-prototypes">ES6 classes and JavaScript prototypes</a>: ES6 Class \u7684\u5199\u6cd5\u4e0e ES5 Prototype \u7684\u5199\u6cd5\u5bf9\u6bd4</li> <li>Jack Franklin, <a href="http://javascriptplayground.com/blog/2014/07/introduction-to-es6-classes-tutorial/">An introduction to ES6 classes</a>: ES6 class \u7684\u5165\u95e8\u4ecb\u7ecd</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2014/12/es6-oop.html">ECMAScript 6: new OOP features besides classes</a></li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2015/02/es6-classes-final.html">Classes in ECMAScript 6 (final semantics)</a>: Class \u8bed\u6cd5\u7684\u8be6\u7ec6\u4ecb\u7ecd\u548c\u8bbe\u8ba1\u601d\u60f3\u5206\u6790</li> <li>Eric Faust, <a href="https://hacks.mozilla.org/2015/08/es6-in-depth-subclassing/">ES6 In Depth: Subclassing</a>: Class \u8bed\u6cd5\u7684\u6df1\u5165\u4ecb\u7ecd</li> <li>Nicol\xe1s Bevacqua, <a href="https://ponyfoo.com/articles/binding-methods-to-class-instance-objects">Binding Methods to Class Instance Objects</a>: \u5982\u4f55\u7ed1\u5b9a\u7c7b\u7684\u5b9e\u4f8b\u4e2d\u7684 this</li> </ul> <h2 id="decorator">Decorator</h2> <ul> <li>Maximiliano Fierro, <a href="http://elmasse.github.io/js/decorators-bindings-es7.html">Declarative vs Imperative</a>: Decorators \u548c Mixin \u4ecb\u7ecd</li> <li>Justin Fagnani, <a href="http://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/">&quot;Real&quot; Mixins with JavaScript Classes</a>: \u4f7f\u7528\u7c7b\u7684\u7ee7\u627f\u5b9e\u73b0 Mixin</li> <li>Addy Osmani, <a href="https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841">Exploring ES2016 Decorators</a>: Decorator \u7684\u6df1\u5165\u4ecb\u7ecd</li> <li>Sebastian McKenzie, <a href="https://github.com/wycats/javascript-decorators/issues/4">Allow decorators for functions as well</a>: \u4e3a\u4ec0\u4e48\u4fee\u9970\u5668\u4e0d\u80fd\u7528\u4e8e\u51fd\u6570</li> <li>Maximiliano Fierro, <a href="http://cocktailjs.github.io/blog/traits-with-es7-decorators.html">Traits with ES7 Decorators</a>: Trait \u7684\u7528\u6cd5\u4ecb\u7ecd</li> <li>Jonathan Creamer: <a href="http://jonathancreamer.com/using-es2016-decorators-to-publish-on-an-event-bus/">Using ES2016 Decorators to Publish on an Event Bus</a>: \u4f7f\u7528\u4fee\u9970\u5668\u5b9e\u73b0\u81ea\u52a8\u53d1\u5e03\u4e8b\u4ef6</li> </ul> <h2 id="module">Module</h2> <ul> <li>Jack Franklin, <a href="http://24ways.org/2014/javascript-modules-the-es6-way/">JavaScript Modules the ES6 Way</a>: ES6 \u6a21\u5757\u5165\u95e8</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2014/09/es6-modules-final.html">ECMAScript 6 modules: the final syntax</a>: ES6 \u6a21\u5757\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u4e0e CommonJS \u89c4\u683c\u7684\u8be6\u7ec6\u6bd4\u8f83</li> <li>Dave Herman, <a href="http://calculist.org/blog/2012/06/29/static-module-resolution/">Static module resolution</a>: ES6 \u6a21\u5757\u7684\u9759\u6001\u5316\u8bbe\u8ba1\u601d\u60f3</li> <li>Jason Orendorff, <a href="https://hacks.mozilla.org/2015/08/es6-in-depth-modules/">ES6 In Depth: Modules</a>: ES6 \u6a21\u5757\u8bbe\u8ba1\u601d\u60f3\u7684\u4ecb\u7ecd</li> <li>Ben Newman, <a href="http://benjamn.github.io/empirenode-2015/#/">The Importance of import and export</a>: ES6 \u6a21\u5757\u7684\u8bbe\u8ba1\u601d\u60f3</li> <li>ESDiscuss, <a href="https://esdiscuss.org/topic/why-is-export-default-var-a-1-invalid-syntax">Why is &quot;export default var a = 1;&quot; invalid syntax?</a></li> <li>Bradley Meck, <a href="https://github.com/nodejs/node-eps/blob/master/002-es6-modules.md">ES6 Module Interoperability</a>: \u4ecb\u7ecd Node \u5982\u4f55\u5904\u7406 ES6 \u8bed\u6cd5\u52a0\u8f7d CommonJS \u6a21\u5757</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2017/01/babel-esm-spec-mode.html">Making transpiled ES modules more spec-compliant</a>: ES6 \u6a21\u5757\u7f16\u8bd1\u6210 CommonJS \u6a21\u5757\u7684\u8be6\u7ec6\u4ecb\u7ecd</li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2017/01/import-operator.html">ES proposal: import() \u2013 dynamically importing ES modules</a>: import() \u7684\u7528\u6cd5</li> <li>Node EPS, <a href="https://github.com/nodejs/node-eps/blob/master/002-es-modules.md">ES Module Interoperability</a>: Node \u5bf9 ES6 \u6a21\u5757\u7684\u5904\u7406\u89c4\u683c</li> </ul> <h2 id="\u4e8c\u8fdb\u5236\u6570\u7ec4">\u4e8c\u8fdb\u5236\u6570\u7ec4</h2> <ul> <li>Ilmari Heikkinen, <a href="http://www.html5rocks.com/en/tutorials/webgl/typed_arrays/">Typed Arrays: Binary Data in the Browser</a></li> <li>Khronos, <a href="http://www.khronos.org/registry/typedarray/specs/latest/">Typed Array Specification</a></li> <li>Ian Elliot, <a href="http://www.i-programmer.info/projects/36-web/6234-reading-a-bmp-file-in-javascript.html">Reading A BMP File In JavaScript</a></li> <li>Renato Mangini, <a href="http://updates.html5rocks.com/2012/06/How-to-convert-ArrayBuffer-to-and-from-String">How to convert ArrayBuffer to and from String</a></li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2015/09/typed-arrays.html">Typed Arrays in ECMAScript 6</a></li> <li>Axel Rauschmayer, <a href="http://2ality.com/2017/01/shared-array-buffer.html">ES proposal: Shared memory and atomics</a></li> <li>Lin Clark, <a href="https://hacks.mozilla.org/2017/06/avoiding-race-conditions-in-sharedarraybuffers-with-atomics/">Avoiding race conditions in SharedArrayBuffers with Atomics</a>: Atomics \u5bf9\u8c61\u4f7f\u7528\u573a\u666f\u7684\u89e3\u91ca</li> <li>Lars T Hansen, <a href="https://github.com/tc39/ecmascript_sharedmem/blob/master/TUTORIAL.md">Shared memory - a brief tutorial</a></li> </ul> <h2 id="simd">SIMD</h2> <ul> <li>TC39, <a href="https://docs.google.com/presentation/d/1MY9NHrHmL7ma7C8dyNXvmYNNGgVmmxXk8ZIiQtPlfH4/edit#slide=id.p19">SIMD.js Stage 2</a></li> <li>MDN, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SIMD">SIMD</a></li> <li>TC39, <a href="https://github.com/tc39/ecmascript_simd">ECMAScript SIMD</a></li> <li>Axel Rauschmayer, <a href="http://www.2ality.com/2013/12/simd-js.html">JavaScript gains support for SIMD</a></li> </ul> <h2 id="\u5de5\u5177">\u5de5\u5177</h2> <ul> <li>Babel, <a href="https://github.com/thejameskyle/babel-handbook/tree/master/translations/en">Babel Handbook</a>: Babel \u7684\u7528\u6cd5\u4ecb\u7ecd</li> <li>Google, <a href="https://github.com/google/traceur-compiler">traceur-compiler</a>: Traceur \u7f16\u8bd1\u5668</li> <li>Casper Beyer, <a href="http://caspervonb.github.io/2014/03/05/ecmascript6-features-and-tools.html">ECMAScript 6 Features and Tools</a></li> <li>Stoyan Stefanov, <a href="http://www.phpied.com/writing-es6-today-with-jstransform/">Writing ES6 today with jstransform</a></li> <li>ES6 Module Loader, <a href="https://github.com/ModuleLoader/es6-module-loader">ES6 Module Loader Polyfill</a>: \u5728\u6d4f\u89c8\u5668\u548c node.js \u52a0\u8f7d ES6 \u6a21\u5757\u7684\u4e00\u4e2a\u5e93\uff0c\u6587\u6863\u91cc\u5bf9 ES6 \u6a21\u5757\u6709\u8be6\u7ec6\u89e3\u91ca</li> <li>Paul Miller, <a href="https://github.com/paulmillr/es6-shim">es6-shim</a>: \u4e00\u4e2a\u9488\u5bf9\u8001\u5f0f\u6d4f\u89c8\u5668\uff0c\u6a21\u62df ES6 \u90e8\u5206\u529f\u80fd\u7684\u57ab\u7247\u5e93\uff08shim\uff09</li> <li>army8735, <a href="https://github.com/army8735/jsdc">Javascript Downcast</a>: \u56fd\u4ea7\u7684 ES6 \u5230 ES5 \u7684\u8f6c\u7801\u5668</li> <li>esnext, <a href="https://github.com/esnext/es6-module-transpiler">ES6 Module Transpiler</a>\uff1a\u57fa\u4e8e node.js \u7684\u5c06 ES6 \u6a21\u5757\u8f6c\u4e3a ES5 \u4ee3\u7801\u7684\u547d\u4ee4\u884c\u5de5\u5177</li> <li>Sebastian McKenzie, <a href="http://babeljs.io/">BabelJS</a>: ES6 \u8f6c\u8bd1\u5668</li> <li>SystemJS, <a href="https://github.com/systemjs/systemjs">SystemJS</a>: \u5728\u6d4f\u89c8\u5668\u4e2d\u52a0\u8f7d AMD\u3001CJS\u3001ES6 \u6a21\u5757\u7684\u4e00\u4e2a\u57ab\u7247\u5e93</li> <li>Modernizr, <a href="https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills#ecmascript-6-harmony">HTML5 Cross Browser Polyfills</a>: ES6 \u57ab\u7247\u5e93\u6e05\u5355</li> <li>Facebook, <a href="https://github.com/facebook/regenerator">regenerator</a>: \u5c06 Generator \u51fd\u6570\u8f6c\u4e3a ES5 \u7684\u8f6c\u7801\u5668</li> </ul> ';e.exports=t}}]);