(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["docs/interview/algorithm"],{dpjJ:function(n,e,r){var t=r("Rxnk"),i=r("mlKk"),o=t(i),l='<h1 id="\u7b97\u6cd5">\u7b97\u6cd5</h1> <h2 id="1-\u6590\u6ce2\u90a3\u5951\u6570\u5217">1 \u6590\u6ce2\u90a3\u5951\u6570\u5217</h2> <p><strong>\u9898\u76ee\uff1a</strong></p> <p>\u6590\u6ce2\u90a3\u5951\u6570\uff0c\u901a\u5e38\u7528 <code>F(n)</code> \u8868\u793a\uff0c\u5f62\u6210\u7684\u5e8f\u5217\u79f0\u4e3a \u6590\u6ce2\u90a3\u5951\u6570\u5217 \u3002\u8be5\u6570\u5217\u7531 0 \u548c 1 \u5f00\u59cb\uff0c\u540e\u9762\u7684\u6bcf\u4e00\u9879\u6570\u5b57\u90fd\u662f\u524d\u9762\u4e24\u9879\u6570\u5b57\u7684\u548c\u3002\u4e5f\u5c31\u662f\uff1a</p> <pre><code>F(0) = 0\uff0cF(1) = 1\nF(n) = F(n - 1) + F(n - 2)\uff0c\u5176\u4e2d n &gt; 1</code></pre><p>\u7ed9\u4f60 n \uff0c\u8bf7\u8ba1\u7b97 F(n)</p> <p><strong>\u601d\u8def\uff1a</strong></p> <p>\u4f7f\u7528\u52a8\u6001\u89c4\u5212\uff0c\u52a8\u6001\u89c4\u5212\u7684\u601d\u60f3\u662f\u5c06\u4efb\u52a1\u62c6\u5206\u4e3a\u76f8\u540c\u7684\u5b50\u4efb\u52a1</p> <pre><code class="language-js">var fib = function(n) {\n  if (n &lt; 2) return n;\n\n  let val = 1;\n  let n1 = 0;\n  let n2 = 0;\n\n  // \u76f8\u540c\u7684\u5b50\u4efb\u52a1\n  for (let i = 2; i &lt;= n; i++) {\n    n1 = n2;\n    n2 = val; // n1,n2 \u5f80\u540e\u79fb\u4e00\u6b65\n    val = n1 + n2; // \u8ba1\u7b97 n3\n  }\n\n  return val;\n};</code></pre> <h3 id="\u9898\u76ee\uff1a\u5b9e\u73b0\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217">\u9898\u76ee\uff1a\u5b9e\u73b0\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u5217</h3> <h2 id="2-\u5408\u5e76\u4e8c\u7ef4\u6709\u5e8f\u6570\u7ec4\u6210\u4e00\u7ef4\u6709\u5e8f\u6570\u7ec4">2 \u5408\u5e76\u4e8c\u7ef4\u6709\u5e8f\u6570\u7ec4\u6210\u4e00\u7ef4\u6709\u5e8f\u6570\u7ec4</h2> <p><strong>\u601d\u8def\uff1a</strong></p> <p>\u53d6\u4e24\u4e2a\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5bf9\u6bd4\uff0c\u5c0f\u7684\u653e\u5165\u65b0\u6570\u7ec4\u4e2d</p> <pre><code class="language-js">// \u5408\u5e76\u4e24\u4e2a\u6570\u7ec4\nfunction merge2(arr1, arr2) {\n  let p1 = 0;\n  let p2 = 0;\n  let arr = [];\n\n  while (p1 &lt; arr1.length &amp;&amp; p2 &lt; arr2.length) {\n    // \u53d6\u4e24\u4e2a\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5bf9\u6bd4\uff0c\u5c0f\u7684\u653e\u5165\u65b0\u6570\u7ec4\u4e2d\n    // \u5982\u679c\u4e00\u4e2a\u6570\u7ec4\u7a7a\u4e86\uff0c\u76f4\u63a5\u653e\u5165\u65b0\u6570\u7ec4\u4e2d\n    if (arr1[p1] &lt; arr2[p2]) {\n      arr.push(arr1[p1]);\n      p1++;\n    } else {\n      arr.push(arr2[p2]);\n      p2++;\n    }\n  }\n\n  while (p1 &lt; arr1.length) {\n    arr.push(arr1[p1]);\n    p1++;\n  }\n  while (p2 &lt; arr2.length) {\n    arr.push(arr2[p2]);\n    p2++;\n  }\n\n  return arr;\n}\n\n// \u5408\u5e76\u4e8c\u7ef4\u6570\u7ec4\nfunction mergeArr(arr) {\n  let arr1 = arr[0];\n  let arr2 = arr[1];\n  let i = 1;\n\n  while (i &lt; arr.length) {\n    i++;\n    arr1 = merge2(arr1, arr2);\n    arr2 = arr[i];\n  }\n\n  return arr1;\n}</code></pre> <h3 id="\u9898\u76ee\uff1a\u5408\u5e76\u4e8c\u7ef4\u6709\u5e8f\u6570\u7ec4\u6210\u4e00\u7ef4\u6709\u5e8f\u6570\u7ec4">\u9898\u76ee\uff1a\u5408\u5e76\u4e8c\u7ef4\u6709\u5e8f\u6570\u7ec4\u6210\u4e00\u7ef4\u6709\u5e8f\u6570\u7ec4</h3> <h2 id="3-\u94fe\u8868\uff1a\u53cd\u8f6c\u94fe\u8868">3 \u94fe\u8868\uff1a\u53cd\u8f6c\u94fe\u8868</h2> <h3 id="31-while-\u8fed\u4ee3">3.1 while \u8fed\u4ee3</h3> <p><strong>\u601d\u8def\uff1a</strong></p> <ol> <li>\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u94fe\u8868 (\u4e0d\u662f\u771f\u7684\u521b\u5efa\uff0c\u4fbf\u4e8e\u7406\u89e3)</li> <li>\u6bcf\u6b21\u53d6\u65e7\u94fe\u8868\u7684\u8868\u5934</li> <li>\u585e\u5230\u65b0\u94fe\u8868\u4e2d\u4f5c\u4e3a\u8868\u5934</li> </ol> <pre><code class="language-js">var reverseList = function(head) {\n  let newhead = null; // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u94fe\u8868 (\u4e0d\u662f\u771f\u7684\u521b\u5efa\uff0c\u4fbf\u4e8e\u7406\u89e3)\n  let curr = head; // \u53d6\u65e7\u94fe\u8868\u7684\u8868\u5934\n\n  while (curr) {\n    let temp = curr.next; // \u6682\u5b58\u65b0\u7684\u8868\u5934\n\n    // \u65e7\u94fe\u8868\u7684\u8868\u5934\uff0c\u585e\u5230\u65b0\u94fe\u8868\u4e2d\u4f5c\u4e3a\u8868\u5934\n    curr.next = newhead;\n    newhead = curr;\n    // \u53d6\u65e7\u94fe\u8868\u7684\u65b0\u8868\u5934\n    curr = temp;\n  }\n\n  return newhead;\n};</code></pre> <h3 id="32-\u9012\u5f52">3.2 \u9012\u5f52</h3> <h2 id="4-\u94fe\u8868\uff1a\u94fe\u8868\u6709\u73af">4 \u94fe\u8868\uff1a\u94fe\u8868\u6709\u73af</h2> <p>\u5224\u65ad\u94fe\u8868\u662f\u5426\u6709\u73af</p> <p>\u6ce8\u610f\uff1a\u73af\u5f62\u94fe\u8868\u5e76\u4e0d\u4e00\u5b9a\u662f\u9996\u5c3e\u76f8\u8fde</p> <h3 id="41-\u4fdd\u5b58\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9">4.1 \u4fdd\u5b58\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9</h3> <p><strong>\u89e3\u6cd5 1\uff1a\u4fdd\u5b58\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9</strong></p> <p><strong>\u601d\u8def\uff1a</strong></p> <p>\u4fdd\u5b58\u6240\u6709\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\uff0c\u6bcf\u6b21\u904d\u5386\u53bb\u4fdd\u5b58\u7684\u8282\u70b9\u4e2d\u67e5\u627e\u662f\u5426\u8bbf\u95ee\u8fc7</p> <p><strong>\u6ce8\u610f\uff1a</strong></p> <ul> <li><code>WeakSet</code> \u7684\u7279\u6027</li> </ul> <pre><code class="language-js">var hasCycle = function(head) {\n  // \u4fdd\u5b58\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\n  const visited = new WeakSet();\n\n  while (head) {\n    // \u5982\u679c\u6709\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\uff0c\u8bf4\u660e\u5faa\u73af\u4e86\u4e00\u904d\u4e86\n    if (visited.has(head)) {\n      return true;\n    }\n    visited.add(head);\n    head = head.next;\n  }\n  return false;\n};</code></pre> <h3 id="42-\u5feb\u6162\u6307\u9488">4.2 \u5feb\u6162\u6307\u9488</h3> <h3 id="\u9898\u76ee\uff1a\u5224\u65ad\u94fe\u8868\u662f\u5426\u6709\u73af">\u9898\u76ee\uff1a\u5224\u65ad\u94fe\u8868\u662f\u5426\u6709\u73af</h3> <h2 id="5-\u5806\u6808\u961f\u5217\uff1a\u5224\u65ad\u62ec\u53f7\u5b57\u7b26\u4e32\u662f\u5426\u6709\u6548">5 \u5806\u6808\u961f\u5217\uff1a\u5224\u65ad\u62ec\u53f7\u5b57\u7b26\u4e32\u662f\u5426\u6709\u6548</h2> <p>\u6709\u4e24\u4e2a\u9898\uff0c\u90fd\u662f\u7528\u6808\u89e3</p> <h3 id="51-leetcode-20">5.1 leetcode 20</h3> <p><strong>\u9898\u76ee\uff1a</strong></p> <pre><code class="language-js">s = &#39;()&#39;;\ns = &#39;()[]{}&#39;;\ns = &#39;{[]}&#39;;\n// s \u4ec5\u7531\u62ec\u53f7 &#39;()[]{}&#39; \u7ec4\u6210</code></pre> <pre><code class="language-js">var isValid = function(s) {\n  const n = s.length;\n\n  // \u6709\u6548\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e00\u5b9a\u4e3a\u5076\u6570\n  if (n % 2 === 1) {\n    return false;\n  }\n\n  // \u5b58\u62ec\u53f7\u7684\u5bf9\u5e94\u5173\u7cfb\n  const pairs = new Map([\n    [&#39;)&#39;, &#39;(&#39;],\n    [&#39;]&#39;, &#39;[&#39;],\n    [&#39;}&#39;, &#39;{&#39;]\n  ]);\n  const stk = [];\n\n  for (let i = 0; i &lt; s.length; i++) {\n    // \u53f3\u62ec\u53f7\u51fa\u6808\n    if (pairs.has(s[i])) {\n      // \u8fd9\u65f6\u6808\u7a7a\u8bf4\u660e\u53f3\u62ec\u53f7\u591a\u4f59\uff0cfalse\n      // \u53d6\u6808\u9876\u62ec\u53f7\u5bf9\u6bd4\n      if (!stk.length || stk[stk.length - 1] !== pairs.get(s[i])) {\n        return false;\n      }\n      stk.pop();\n    }\n    // \u5de6\u62ec\u53f7\u5165\u6808\n    else {\n      stk.push(s[i]);\n    }\n  }\n\n  // \u6808\u4e0d\u4e3a\u7a7a\u8bf4\u660e\u5de6\u62ec\u53f7\u591a\u4f59\n  return !stk.length;\n};</code></pre> <h3 id="52-leetcode-678">5.2 leetcode 678</h3> <p><strong>\u9898\u76ee\uff1a</strong></p> <p><code>*</code> \u53ef\u4ee5\u88ab\u89c6\u4e3a\u5355\u4e2a\u53f3\u62ec\u53f7 <code>)</code> \uff0c\u6216\u5355\u4e2a\u5de6\u62ec\u53f7 <code>(</code> \uff0c\u6216\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32</p> <pre><code class="language-js">&#39;()&#39;; // true\n&#39;(*)&#39;; // true\n&#39;(*))&#39;; // true\n&#39;(())(*()())(*&#39;; // true</code></pre> <p><strong>\u601d\u8def\uff1a</strong></p> <ul> <li>\u4f7f\u7528\u4e24\u4e2a\u6808\uff0c\u62ec\u53f7\u6808\u3001\u661f\u53f7\u6808</li> <li>\u5de6\u62ec\u53f7\u5165\u6808\u53f3\u62ec\u53f7\u51fa\u6808</li> <li>\u4f18\u5148\u51fa\u6808\u62ec\u53f7\u6808\uff0c\u5982\u679c\u62ec\u53f7\u6808\u7a7a\uff0c\u51fa\u6808\u661f\u53f7\u6808</li> </ul> <pre><code class="language-js">var checkValidString = function(s) {\n  let left = [];\n  let star = [];\n\n  for (let i = 0; i &lt; s.length; i++) {\n    // \u5165\u6808\n    if (s[i] == &#39;(&#39;) left.push(i);\n    if (s[i] == &#39;*&#39;) star.push(i);\n\n    // \u51fa\u6808\uff0c\u4f18\u5148\u51fa\u62ec\u53f7\u6808\n    if (s[i] == &#39;)&#39;) {\n      if (left.length) {\n        left.pop();\n      } else if (star.length) {\n        star.pop();\n      } else {\n        return false;\n      }\n    }\n  }\n\n  // \u5de6\u62ec\u53f7\u957f\u5ea6\u5927\u4e8e\u53f3\u62ec\u53f7\u957f\u5ea6\uff0c\u8bf4\u660e\u5de6\u62ec\u53f7\u5269\u4f59\uff0c\u4e0d\u5339\u914d\n  if (left.length &gt; star.length) return false;\n\n  // \u9010\u4e00\u5bf9\u6bd4\u5269\u4f59\u7684\u62ec\u53f7\n  // \u5982\u679c\u5de6\u62ec\u53f7\u4f4d\u7f6e\u5927\u4e8e\u661f\u53f7\u4f4d\u7f6e\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5de6\u62ec\u53f7\u662f\u591a\u4f59\u7684\uff0c\u4e0d\u914d\u5bf9\n  while (left.length &amp;&amp; star.length) {\n    if (left.pop() &gt; star.pop()) return false;\n  }\n\n  return true;\n};</code></pre> <h3 id="\u9898\u76ee\uff1a\u5224\u65ad\u62ec\u53f7\u5b57\u7b26\u4e32\u662f\u5426\u6709\u6548">\u9898\u76ee\uff1a\u5224\u65ad\u62ec\u53f7\u5b57\u7b26\u4e32\u662f\u5426\u6709\u6548</h3> <h2 id="6-\u8fd4\u56de\u6570\u7ec4\u4e2d\u7b2c-k-\u4e2a\u6700\u5927\u5143\u7d20">6 \u8fd4\u56de\u6570\u7ec4\u4e2d\u7b2c k \u4e2a\u6700\u5927\u5143\u7d20</h2> <h3 id="61-\u5feb\u901f\u6392\u5e8f">6.1 \u5feb\u901f\u6392\u5e8f</h3> <pre><code class="language-js">function sort(arr) {\n  if (arr.length &lt; 2) return arr;\n\n  let left = [];\n  let right = [];\n  let mid = arr[0];\n\n  for (let i = 1; i &lt; arr.length; i++) {\n    if (arr[i] &lt; mid) {\n      right.push(arr[i]);\n    } else {\n      left.push(arr[i]);\n    }\n  }\n\n  let sLeft = sort(left);\n  let sRight = sort(right);\n\n  return [...sLeft, mid, ...sRight];\n}</code></pre> <h3 id="62-\u5806\u6392\u5e8f">6.2 \u5806\u6392\u5e8f</h3> <h2 id="7-\u627e\u51fa\u6570\u7ec4\u4e2d\u548c\u4e3a-sum-\u7684-n-\u4e2a\u6570">7 \u627e\u51fa\u6570\u7ec4\u4e2d\u548c\u4e3a sum \u7684 n \u4e2a\u6570</h2> <pre><code class="language-js">function getNum(arr, sum, n) {\n  let res = [];\n  let i = 0;\n\n  function loop(nums, left) {\n    if (nums.length === n) {\n      let curSum = nums.reduce((a, b) =&gt; a + b);\n\n      if (curSum === sum) {\n        res.push(nums);\n        return;\n      }\n    }\n\n    if (!left.length || nums.length &gt;= n) return;\n\n    left.forEach((item, i) =&gt; {\n      loop([...nums, item], left.slice(i + 1));\n    });\n  }\n\n  loop([], arr);\n\n  return res;\n}</code></pre> <h3 id="\u9898\u76ee\uff1a\u627e\u51fa\u6570\u7ec4\u4e2d\u548c\u4e3a-sum-\u7684-n-\u4e2a\u6570">\u9898\u76ee\uff1a\u627e\u51fa\u6570\u7ec4\u4e2d\u548c\u4e3a sum \u7684 n \u4e2a\u6570</h3> <h2 id="8-\u8d2a\u5fc3\uff1a\u5177\u6709\u7ed9\u5b9a\u6570\u503c\u7684\u6700\u5c0f\u5b57\u7b26\u4e32">8 \u8d2a\u5fc3\uff1a\u5177\u6709\u7ed9\u5b9a\u6570\u503c\u7684\u6700\u5c0f\u5b57\u7b26\u4e32</h2> <p><strong>\u601d\u8def\uff1a</strong></p> <ul> <li>\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5</li> <li>\u5148\u5168\u90e8\u586b\u5145 a</li> <li>\u518d\u91cd\u540e\u5f80\u524d\uff0c\u5f80\u5927\u7684\u586b\u5145</li> </ul> <pre><code class="language-js">var getSmallestString = function(n, k) {\n  let arr = Array(n).fill(&#39;a&#39;); // \u5148\u5168\u90e8\u586b\u5145 a\n  let rest = k - n; // \u5269\u4f59\u7684\u6570\u503c\n  let i = n - 1; // \u9700\u8981\u586b\u5145\u7684\u4f4d\u7f6e\n\n  while (rest &gt; 0) {\n    // \u5982\u679c\u5927\u4e8e 25\uff0c\u76f4\u63a5\u586b\u5145 z\n    // \u7136\u540e\u518d\u6b21\u5faa\u73af\uff0c\u586b\u5145\u524d\u4e00\u4f4d\n    if (rest &gt; 25) {\n      rest = rest - 25;\n      arr[i] = &#39;z&#39;;\n      i--;\n    } else {\n      arr[i] = String.fromCharCode(&#39;a&#39;.charCodeAt() + rest);\n      rest = 0;\n    }\n  }\n\n  return arr.join(&#39;&#39;);\n};</code></pre> <h2 id="9-\u4e8c\u53c9\u6811\uff1a\u6700\u5927\u6df1\u5ea6">9 \u4e8c\u53c9\u6811\uff1a\u6700\u5927\u6df1\u5ea6</h2> <p><strong>\u601d\u8def\uff1a</strong></p> <p>\u6df1\u5ea6\u4f18\u5148\u904d\u5386</p> <pre><code class="language-js">var maxDepth = function(root) {\n  if (!root) return 0;\n\n  let leftDeep = maxDepth(root.left);\n  let rightDeep = maxDepth(root.right);\n\n  return Math.max(leftDeep, rightDeep) + 1;\n};</code></pre> <h2 id="10-\u4e8c\u53c9\u6811\uff1a\u5c42\u6b21\u904d\u5386">10 \u4e8c\u53c9\u6811\uff1a\u5c42\u6b21\u904d\u5386</h2> <p>\u8f93\u51fa\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff1a <code>[[\u5c42\u4e00], [\u5c42\u4e8c], [\u5c42\u4e09]]</code></p> <p>\u5e7f\u5ea6\u4f18\u5148\u904d\u5386</p> <pre><code class="language-js">// \u4e0d\u8fd4\u56de\u6570\u7ec4 (\u4e0d\u533a\u5206\u5c42\u7ea7)\uff0c\u76f4\u63a5\u6253\u5370\u7684\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\nvar levelOrder = function(root) {\n  const q = [root];\n\n  if (!root) return ret;\n\n  // \u6309\u5c42\u7ea7\u987a\u5e8f\u9010\u4e00\u6dfb\u52a0\u8fdb\u961f\u5217\n  while (q.length) {\n    const node = q.shift();\n\n    if (node.left) q.push(node.left);\n    if (node.right) q.push(node.right);\n\n    console.log(node.val);\n  }\n\n  return ret;\n};</code></pre> <pre><code class="language-js">var levelOrder = function(root) {\n  const ret = [];\n  const q = [root];\n\n  if (!root) return ret;\n\n  while (q.length) {\n    // for \u5faa\u73af\u4f1a\u628a\u4e0a\u4e00\u5c42\u7ea7\u7684\u8282\u70b9\u90fd\u904d\u5386\u5b8c\uff0c\u7136\u540e\u6dfb\u52a0\u4e0b\u4e00\u5c42\u7ea7\u7684\u6240\u6709\u8282\u70b9\u3002\u6240\u4ee5\u961f\u5217\u7684\u957f\u5ea6\u5c31\u662f\u5f53\u524d\u5c42\u7ea7\u8282\u70b9\u7684\u4e2a\u6570\n    let currentLevelSize = q.length;\n    let currentLevelVals = []; // \u4fdd\u5b58\u5f53\u524d\u5c42\u7ea7\u7684\u6570\u7ec4\n\n    // \u904d\u5386\u5f53\u524d\u5c42\u7ea7\u7684\u6240\u6709\u8282\u70b9\n    for (let i = 1; i &lt;= currentLevelSize; ++i) {\n      const node = q.shift();\n      currentLevelVals.push(node.val);\n\n      // \u6dfb\u52a0\u4e0b\u4e00\u5c42\u7ea7\u7684\u8282\u70b9\n      if (node.left) q.push(node.left);\n      if (node.right) q.push(node.right);\n    }\n\n    ret.push(currentLevelVals);\n  }\n\n  return ret;\n};</code></pre> <h3 id="\u9898\u76ee\uff1a\u5c42\u6b21\u904d\u5386\u4e8c\u53c9\u6811">\u9898\u76ee\uff1a\u5c42\u6b21\u904d\u5386\u4e8c\u53c9\u6811</h3> <h2 id="11-\u526a\u679d\uff1a\u5224\u65ad\u6570\u72ec\u662f\u5426\u6709\u6548">11 \u526a\u679d\uff1a\u5224\u65ad\u6570\u72ec\u662f\u5426\u6709\u6548</h2> <p><strong>\u9898\u76ee\uff1a</strong></p> <p>\u8bf7\u4f60\u5224\u65ad\u4e00\u4e2a <code>9x9</code> \u7684\u6570\u72ec\u662f\u5426\u6709\u6548\u3002\u53ea\u9700\u8981 \u6839\u636e\u4ee5\u4e0b\u89c4\u5219 \uff0c\u9a8c\u8bc1\u5df2\u7ecf\u586b\u5165\u7684\u6570\u5b57\u662f\u5426\u6709\u6548\u5373\u53ef\u3002</p> <ol> <li>\u6570\u5b57 <code>1-9</code> \u5728\u6bcf\u4e00\u884c\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li> <li>\u6570\u5b57 <code>1-9</code> \u5728\u6bcf\u4e00\u5217\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li> <li>\u6570\u5b57 <code>1-9</code> \u5728\u6bcf\u4e00\u4e2a\u4ee5\u7c97\u5b9e\u7ebf\u5206\u9694\u7684 <code>3x3</code> \u5bab\u5185\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002\uff08\u8bf7\u53c2\u8003\u793a\u4f8b\u56fe\uff09</li> </ol> <p>\u6570\u72ec\u90e8\u5206\u7a7a\u683c\u5185\u5df2\u586b\u5165\u4e86\u6570\u5b57\uff0c\u7a7a\u767d\u683c\u7528 <code>&#39;.&#39;</code> \u8868\u793a</p> <ul> <li>\u4e00\u4e2a\u6709\u6548\u7684\u6570\u72ec\uff08\u90e8\u5206\u5df2\u88ab\u586b\u5145\uff09\u4e0d\u4e00\u5b9a\u662f\u53ef\u89e3\u7684\u3002</li> <li>\u53ea\u9700\u8981\u6839\u636e\u4ee5\u4e0a\u89c4\u5219\uff0c\u9a8c\u8bc1\u5df2\u7ecf\u586b\u5165\u7684\u6570\u5b57\u662f\u5426\u6709\u6548\u5373\u53ef</li> </ul> <p><img src="'+o+'" alt=""></p> <pre><code class="language-js">board = [\n  [&#39;5&#39;, &#39;3&#39;, &#39;.&#39;, &#39;.&#39;, &#39;7&#39;, &#39;.&#39;, &#39;.&#39;, &#39;.&#39;, &#39;.&#39;],\n  [&#39;6&#39;, &#39;.&#39;, &#39;.&#39;, &#39;1&#39;, &#39;9&#39;, &#39;5&#39;, &#39;.&#39;, &#39;.&#39;, &#39;.&#39;],\n  [&#39;.&#39;, &#39;9&#39;, &#39;8&#39;, &#39;.&#39;, &#39;.&#39;, &#39;.&#39;, &#39;.&#39;, &#39;6&#39;, &#39;.&#39;],\n  [&#39;8&#39;, &#39;.&#39;, &#39;.&#39;, &#39;.&#39;, &#39;6&#39;, &#39;.&#39;, &#39;.&#39;, &#39;.&#39;, &#39;3&#39;],\n  [&#39;4&#39;, &#39;.&#39;, &#39;.&#39;, &#39;8&#39;, &#39;.&#39;, &#39;3&#39;, &#39;.&#39;, &#39;.&#39;, &#39;1&#39;],\n  [&#39;7&#39;, &#39;.&#39;, &#39;.&#39;, &#39;.&#39;, &#39;2&#39;, &#39;.&#39;, &#39;.&#39;, &#39;.&#39;, &#39;6&#39;],\n  [&#39;.&#39;, &#39;6&#39;, &#39;.&#39;, &#39;.&#39;, &#39;.&#39;, &#39;.&#39;, &#39;2&#39;, &#39;8&#39;, &#39;.&#39;],\n  [&#39;.&#39;, &#39;.&#39;, &#39;.&#39;, &#39;4&#39;, &#39;1&#39;, &#39;9&#39;, &#39;.&#39;, &#39;.&#39;, &#39;5&#39;],\n  [&#39;.&#39;, &#39;.&#39;, &#39;.&#39;, &#39;.&#39;, &#39;8&#39;, &#39;.&#39;, &#39;.&#39;, &#39;7&#39;, &#39;9&#39;]\n];\n// true</code></pre> <p><strong>\u601d\u8def\uff1a</strong></p> <ul> <li>\u904d\u5386\u4e00\u6b21\u4e8c\u7ef4\u6570\u7ec4</li> <li>\u5206\u522b\u5b58\u50a8\u884c\u3001\u5217\u3001\u4e5d\u5bab\u683c\u51fa\u73b0\u8fc7\u7684\u503c</li> <li>\u904d\u5386\u65f6\u5224\u65ad\u884c\u3001\u5217\u3001\u4e5d\u5bab\u683c\u7684\u503c\u662f\u5426\u51fa\u73b0\u8fc7</li> <li>\u5f53\u524d\u7684\u4e5d\u5bab\u683c <code>boxIndex = Math.floor(row/3) * 3 + Math.floor(columns/3)</code></li> </ul> <pre><code class="language-js">var isValidSudoku = function(board) {\n  // \u4fdd\u5b58 \u884c\u3001\u5217\u3001\u4e5d\u5bab\u683c\u904d\u5386\u8fc7\u7684\u6570\u5b57\n  let rows = {};\n  let columns = {};\n  let boxes = {};\n\n  for (let row = 0; row &lt; 9; row++) {\n    for (let column = 0; column &lt; 9; column++) {\n      let num = board[row][column]; // \u5f53\u524d\u6570\u5b57\n\n      if (num !== &#39;.&#39;) {\n        // \u5f53\u524d\u5bf9\u5e94\u7684\u4e5d\u5bab\u683c\n        let boxIndex = Math.floor(row / 3) * 3 + Math.floor(column / 3);\n\n        //  \u5224\u65ad\u662f\u5426\u91cd\u590d\n        if (rows[`${row}${num}`] || columns[`${column}${num}`] || boxes[`${boxIndex}${num}`]) {\n          return false;\n        }\n\n        // \u4fdd\u5b58\u8bbf\u95ee\u8fc7\u7684\u6570\n        rows[`${row}${num}`] = true;\n        columns[`${column}${num}`] = true;\n        boxes[`${boxIndex}${num}`] = true;\n      }\n    }\n  }\n\n  return true;\n};</code></pre> <h2 id="12-\u4e8c\u5206\u67e5\u627e\uff1a\u6c42\u89e3\u5e73\u65b9\u6839">12 \u4e8c\u5206\u67e5\u627e\uff1a\u6c42\u89e3\u5e73\u65b9\u6839</h2> <p><strong>\u9898\u76ee\uff1a</strong></p> <p>\u5b9e\u73b0 <code>int sqrt(int x)</code> \u51fd\u6570\u3002</p> <p>\u8ba1\u7b97\u5e76\u8fd4\u56de <code>x</code> \u7684\u5e73\u65b9\u6839\uff0c\u5176\u4e2d <code>x</code> \u662f\u975e\u8d1f\u6574\u6570\u3002</p> <p>\u7531\u4e8e\u8fd4\u56de\u7c7b\u578b\u662f\u6574\u6570\uff0c\u7ed3\u679c\u53ea\u4fdd\u7559\u6574\u6570\u7684\u90e8\u5206\uff0c\u5c0f\u6570\u90e8\u5206\u5c06\u88ab\u820d\u53bb</p> <pre><code>\u8f93\u5165: 4\n\u8f93\u51fa: 2\n\n\u8f93\u5165: 8\n\u8f93\u51fa: 2\n\u8bf4\u660e: 8 \u7684\u5e73\u65b9\u6839\u662f 2.82842...,\u7531\u4e8e\u8fd4\u56de\u7c7b\u578b\u662f\u6574\u6570\uff0c\u5c0f\u6570\u90e8\u5206\u5c06\u88ab\u820d\u53bb</code></pre><p><strong>\u601d\u8def\uff1a</strong></p> <ul> <li>\u4f7f\u7528\u4e8c\u5206\u6cd5</li> </ul> <pre><code class="language-js">// \u4e8c\u5206\u6cd5\nvar mySqrt = function(x) {\n  if (x &lt; 2) return x;\n\n  let left = 0;\n  let right = x;\n\n  while (left &lt;= right) {\n    // \u53d6 left right \u7684\u4e2d\u4f4d\u6570\n    let mid = Math.floor((left + right) / 2);\n\n    if (mid * mid &lt; x) {\n      left = mid + 1;\n    } else if (mid * mid &gt; x) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return right;\n};</code></pre> <h3 id="\u9898\u76ee\uff1a\u6c42\u89e3\u5e73\u65b9\u6839">\u9898\u76ee\uff1a\u6c42\u89e3\u5e73\u65b9\u6839</h3> <h2 id="13-\u5b57\u5178\u6811\uff1a\u5b9e\u73b0\u4e00\u4e2a\u5b57\u5178\u6811">13 \u5b57\u5178\u6811\uff1a\u5b9e\u73b0\u4e00\u4e2a\u5b57\u5178\u6811</h2> <p><strong>\u9898\u76ee\uff1a</strong></p> <p>\u524d\u7f00\u6811 \u662f\u4e00\u79cd\u6811\u5f62\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u9ad8\u6548\u5730\u5b58\u50a8\u548c\u68c0\u7d22\u5b57\u7b26\u4e32\u6570\u636e\u96c6\u4e2d\u7684\u952e\u3002\u8fd9\u4e00\u6570\u636e\u7ed3\u6784\u6709\u76f8\u5f53\u591a\u7684\u5e94\u7528\u60c5\u666f\uff0c\u4f8b\u5982\u81ea\u52a8\u8865\u5b8c\u548c\u62fc\u5199\u68c0\u67e5</p> <ul> <li><code>Trie()</code> \u521d\u59cb\u5316\u524d\u7f00\u6811\u5bf9\u8c61</li> <li><code>void insert(String word)</code> \u5411\u524d\u7f00\u6811\u4e2d\u63d2\u5165\u5b57\u7b26\u4e32 <code>word</code></li> <li><code>boolean search(String word)</code> \u5982\u679c\u5b57\u7b26\u4e32 <code>word</code> \u5728\u524d\u7f00\u6811\u4e2d\uff0c\u8fd4\u56de <code>true</code>\uff08\u5373\uff0c\u5728\u68c0\u7d22\u4e4b\u524d\u5df2\u7ecf\u63d2\u5165\uff09\uff1b\u5426\u5219\uff0c\u8fd4\u56de <code>false</code></li> <li><code>boolean startsWith(String prefix)</code> \u5982\u679c\u4e4b\u524d\u5df2\u7ecf\u63d2\u5165\u7684\u5b57\u7b26\u4e32 <code>word</code> \u7684\u524d\u7f00\u4e4b\u4e00\u4e3a <code>prefix</code> \uff0c\u8fd4\u56de <code>true</code>\uff1b\u5426\u5219\uff0c\u8fd4\u56de <code>false</code></li> </ul> <pre><code class="language-js">Trie trie = new Trie();\ntrie.insert(&quot;apple&quot;);\ntrie.search(&quot;apple&quot;);   // \u8fd4\u56de True\ntrie.search(&quot;app&quot;);     // \u8fd4\u56de False\ntrie.startsWith(&quot;app&quot;); // \u8fd4\u56de True\ntrie.insert(&quot;app&quot;);\ntrie.search(&quot;app&quot;);     // \u8fd4\u56de True</code></pre> <p><strong>\u601d\u8def\uff1a</strong></p> <pre><code class="language-js">trie.insert(&#39;abc&#39;);\nmap = {\n  a: {\n    b: {\n      c: {\n        isEnd: true\n      }\n    }\n  }\n};\n\ntrie.insert(&#39;abd&#39;);\nmap = {\n  a: {\n    b: {\n      c: {\n        isEnd: true\n      },\n      d: {\n        isEnd: true\n      }\n    }\n  }\n};</code></pre> <pre><code class="language-js">var Trie = function() {\n  this.children = {};\n};\n\nTrie.prototype.insert = function(word) {\n  let node = this.children;\n  // \u6784\u5efamap\n  for (const ch of word) {\n    if (!node[ch]) {\n      node[ch] = {};\n    }\n    node = node[ch];\n  }\n  node.isEnd = true;\n};\n\n// \u67e5\u627e\u672b\u5c3e\u7684\u8282\u70b9\nTrie.prototype.searchPrefix = function(prefix) {\n  let node = this.children;\n  for (const ch of prefix) {\n    if (!node[ch]) {\n      return false;\n    }\n    node = node[ch];\n  }\n  return node;\n};\n\nTrie.prototype.search = function(word) {\n  const node = this.searchPrefix(word);\n  return node &amp;&amp; node.isEnd === true;\n};\n\nTrie.prototype.startsWith = function(prefix) {\n  return !!this.searchPrefix(prefix);\n};\n\nlet trie = new Trie();\n\ntrie.insert(&#39;hello&#39;);\n\nconsole.dir(trie);</code></pre> <h2 id="14-\u722c\u697c\u68af\u95ee\u9898">14 \u722c\u697c\u68af\u95ee\u9898</h2> <p><strong>\u9898\u76ee\uff1a</strong></p> <p>\u5047\u8bbe\u4f60\u6b63\u5728\u722c\u697c\u68af\u3002\u9700\u8981 n \u9636\u4f60\u624d\u80fd\u5230\u8fbe\u697c\u9876\u3002</p> <p>\u6bcf\u6b21\u4f60\u53ef\u4ee5\u722c 1 \u6216 2 \u4e2a\u53f0\u9636\u3002\u4f60\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u5462\uff1f</p> <p>\u6ce8\u610f\uff1a\u7ed9\u5b9a n \u662f\u4e00\u4e2a\u6b63\u6574\u6570</p> <p><strong>\u601d\u8def\uff1a</strong></p> <p>\u627e\u89c4\u5f8b\uff1a</p> <pre><code>1 2 3 4 5 // n\n1 2 3 5 8 // \u65b9\u6cd5\u6570</code></pre><p>\u7c7b\u4f3c\u4e8e\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff1a<code>f(n) = f(n-2) + f(n-1)</code></p> <pre><code class="language-js">var climbStairs = function(n) {\n  let num = 1;\n  let num_2 = 0;\n  let num_1 = 0;\n\n  for (let i = 1; i &lt;= n; i++) {\n    num_2 = num_1;\n    num_1 = num;\n    num = num_2 + num_1;\n  }\n\n  return num;\n};</code></pre> <h2 id="\u9898\u76ee\uff1a\u722c\u697c\u68af\u95ee\u9898">\u9898\u76ee\uff1a\u722c\u697c\u68af\u95ee\u9898</h2> <h2 id="15-\u6700\u77ed\u8ddd\u79bb">15 \u6700\u77ed\u8ddd\u79bb</h2> <p><strong>\u9898\u76ee\uff1a</strong></p> <p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>s</code> \u548c\u4e00\u4e2a\u5b57\u7b26 <code>c</code>\uff0c\u4e14 <code>c</code> \u662f <code>s</code> \u4e2d\u51fa\u73b0\u8fc7\u7684\u5b57\u7b26\u3002</p> <p>\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>answer</code>\uff0c\u5176\u4e2d <code>answer.length == s.length</code> \u4e14 <code>answer[i]</code> \u662f <code>s</code> \u4e2d\u4ece\u4e0b\u6807 <code>i</code> \u5230\u79bb\u5b83\u6700\u8fd1\u7684\u5b57\u7b26 <code>c</code> \u7684\u8ddd\u79bb</p> <p>\u4e24\u4e2a\u4e0b\u6807 <code>i</code> \u548c <code>j</code> \u4e4b\u95f4\u7684\u8ddd\u79bb\u4e3a <code>abs(i - j)</code>\uff0c\u5176\u4e2d <code>abs</code> \u662f\u7edd\u5bf9\u503c\u51fd\u6570</p> <pre><code>\u8f93\u5165\uff1as = &quot;loveleetcode&quot;, c = &quot;e&quot;\n\u8f93\u51fa\uff1a[3,2,1,0,1,0,0,1,2,2,1,0]</code></pre><p><strong>\u601d\u8def\uff1a</strong></p> <ul> <li>\u4ece\u5de6\u5230\u53f3\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u8bb0\u5f55\u5f53\u524d\u5b57\u7b26\u4e32\u79bb\u5de6\u4fa7 c \u6700\u8fd1\u7684\u8ddd\u79bb</li> <li>\u7136\u540e\u4ece\u53f3\u5230\u5de6\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u8ba1\u7b97\u5f53\u524d\u5b57\u7b26\u4e32\u79bb\u53f3\u4fa7 c \u6700\u8fd1\u7684\u8ddd\u79bb</li> <li>\u8ddf\u5de6\u4fa7\u7684\u8ddd\u79bb\u5bf9\u6bd4\u53d6\u6700\u5c0f\u503c</li> </ul> <pre><code class="language-js">var shortestToChar = function(s, c) {\n  let res = Array(s.length);\n\n  // \u4ece\u5de6\u5230\u53f3\u904d\u5386\u5b57\u7b26\u4e32\n  let cIndex = Infinity;\n  for (let i = 0; i &lt; s.length; i++) {\n    if (s[i] === c) cIndex = i;\n\n    // \u8bb0\u5f55\u5f53\u524d\u5b57\u7b26\u4e32\u79bb\u5de6\u4fa7 c \u6700\u8fd1\u7684\u8ddd\u79bb\n    res[i] = i - cIndex;\n  }\n\n  // \u4ece\u53f3\u5230\u5de6\u904d\u5386\u5b57\u7b26\u4e32\n  cIndex = Infinity;\n  for (let i = s.length - 1; i &gt;= 0; i--) {\n    if (s[i] === c) cIndex = i;\n\n    // \u8ba1\u7b97\u5f53\u524d\u5b57\u7b26\u4e32\u79bb\u53f3\u4fa7 c \u6700\u8fd1\u7684\u8ddd\u79bb\n    let distance = cIndex - i;\n\n    // \u53d6\u6700\u5c0f\u503c\n    res[i] = distance &lt; res[i] ? distance : res[i];\n  }\n\n  return res;\n};</code></pre> <h2 id="16-lru-\u7f13\u5b58">16 LRU \u7f13\u5b58</h2> <h2 id="17-\u7ffb\u8f6c\u4e8c\u53c9\u6811">17 \u7ffb\u8f6c\u4e8c\u53c9\u6811</h2> <pre><code class="language-js">var invertTree = function(root) {\n  if (root === null) return root;\n\n  let left = invertTree(root.left);\n  let right = invertTree(root.right);\n\n  root.left = right;\n  root.right = left;\n\n  return root;\n};</code></pre> <h2 id="18-\u5b9e\u73b0\u4e00\u4e2a-trim-\u65b9\u6cd5">18 \u5b9e\u73b0\u4e00\u4e2a trim \u65b9\u6cd5</h2> <pre><code class="language-js">String.prototype.myTrim = function() {\n  return this.replace(/^\\s+/, &#39;&#39;).replace(/\\s+$/, &#39;&#39;);\n};</code></pre> <h3 id="\u9898\u76ee\uff1a\u5b9e\u73b0\u4e00\u4e2a-trim-\u65b9\u6cd5">\u9898\u76ee\uff1a\u5b9e\u73b0\u4e00\u4e2a trim \u65b9\u6cd5</h3> <h2 id="19-\u5b9e\u73b0\u4e00\u4e2a-deepclone-\u65b9\u6cd5">19 \u5b9e\u73b0\u4e00\u4e2a deepClone \u65b9\u6cd5</h2> <h3 id="191-\u6df1\u62f7\u8d1d">19.1 \u6df1\u62f7\u8d1d</h3> <pre><code class="language-javascript">let obj = {\n  name: &#39;John&#39;,\n  other: {\n    age: 20\n  }\n};\n\n// other \u662f\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\uff0cObject.assign \u53ea\u80fd\u62f7\u8d1d\u4e00\u5c42\uff0c\u65e0\u6cd5\u6df1\u62f7\u8d1d\n// \u5e76\u4e14 for in \u53ea\u904d\u5386\u4e00\u5c42\u7684\u8bdd\u4e5f\u65e0\u6cd5\u6df1\u62f7\u8d1d</code></pre> <p>\u6d45\u62f7\u8d1d\u662f\u53ea\u53ea\u62f7\u8d1d\u7b2c\u4e00\u5c42</p> <ul> <li><code>JSON.parse(JSON.stringify({}))</code> \u65e0\u6cd5\u62f7\u8d1d\u5176\u4ed6\u5f15\u7528\u7c7b\u578b\u3001\u62f7\u8d1d\u51fd\u6570\u3001\u5faa\u73af\u5f15\u7528\u7b49\u60c5\u51b5</li> <li><code>for in</code> \u80fd\u904d\u5386\u6240\u6709\u5c5e\u6027\u5417\uff0c\u6709\u4ec0\u4e48\u9650\u5236\uff0c\u7ee7\u627f\u7684\u5c5e\u6027\u80fd\u590d\u5236\u5417</li> <li><code>Object.assign</code> \u4e0d\u80fd\u6df1\u62f7\u8d1d\uff0c\u53ea\u80fd\u62f7\u8d1d\u4e00\u5c42</li> </ul> <h3 id="192-\u5b9e\u73b0\u6df1\u62f7\u8d1d">19.2 \u5b9e\u73b0\u6df1\u62f7\u8d1d</h3> <p><strong>\u6ce8\u610f\u70b9\uff1a</strong></p> <ol> <li>\u5f15\u7528\u7c7b\u578b</li> <li>\u62f7\u8d1d\u51fd\u6570</li> <li>\u5faa\u73af\u5f15\u7528</li> <li>WeakMap \u7684\u7279\u6027</li> </ol> <pre><code class="language-js">function isObject(target) {\n  const type = typeof target;\n  return type !== null &amp;&amp; (type === &#39;object&#39; || type === &#39;function&#39;);\n}\n\nfunction getType(target) {\n  return Object.prototype.toString.call(target);\n}\n\nfunction clone(target, map = new WeakMap()) {\n  if (!isObject(target)) {\n    return target;\n  }\n\n  // \u5224\u65ad\u5faa\u73af\u5f15\u7528\uff0ces5 \u53ef\u4ee5\u7528\u6570\u7ec4\u4ee3\u66ff\n  if (map.get(target)) {\n    return map.get(target);\n  }\n\n  // \u7528\u6784\u9020\u51fd\u6570\u751f\u6210\u521d\u59cb\u503c\n  let cloneTarget = new target.constructor();\n\n  map.set(target, cloneTarget);\n\n  // Object Array\n  if (getType(target) === &#39;[object Object]&#39; || getType(target) === &#39;[object Array]&#39;) {\n    for (let key in target) {\n      cloneTarget[key] = clone(target[key], map);\n    }\n  }\n\n  // \u51fd\u6570\n  // \u5176\u4ed6\u7c7b\u578b\n  // map\n  // set\n  // \u6b63\u5219\n\n  return cloneTarget;\n}</code></pre> <h2 id="20-\u5b9e\u73b0-add123">20 \u5b9e\u73b0 add(1)(2)(3)</h2> <h3 id="201-\u56fa\u5b9a\u53c2\u6570\u4e2a\u6570">20.1 \u56fa\u5b9a\u53c2\u6570\u4e2a\u6570</h3> <pre><code class="language-js">const curry = (fn, ...args) =&gt;\n  // \u51fd\u6570\u7684\u53c2\u6570\u4e2a\u6570\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u51fd\u6570\u6570\u7684.length\u5c5e\u6027\u6765\u8bbf\u95ee\n  // \u4f20\u5165\u7684\u53c2\u6570\u5927\u4e8e\u7b49\u4e8e\u539f\u59cb\u51fd\u6570fn\u7684\u53c2\u6570\u4e2a\u6570\uff0c\u5219\u76f4\u63a5\u6267\u884c\u8be5\u51fd\u6570\uff0c\u5426\u5219\u7ee7\u7eed\u79d1\u91cc\u5316\n  args.length &gt;= fn.length ? fn(...args) : (..._args) =&gt; curry(fn, ...args, ..._args);</code></pre> <h3 id="202-\u53c2\u6570\u4e2a\u6570\u4e0d\u56fa\u5b9a">20.2 \u53c2\u6570\u4e2a\u6570\u4e0d\u56fa\u5b9a</h3> <pre><code class="language-js">function add(...args) {\n  let sum = 0;\n\n  for (let i = 0; i &lt; args.length; i++) {\n    sum = sum + args[i];\n  }\n\n  return sum;\n}\n\nfunction currying(fn) {\n  let sum = 0;\n\n  let curringFn = function(...args) {\n    let val = fn(...args);\n    sum += val;\n    return curringFn;\n  };\n\n  curringFn.toString = function() {\n    return sum;\n  };\n\n  return curringFn;\n}\n\nlet sum = currying(add);\n\nconsole.log(sum(1)(2)(3)(4, 5).toString());</code></pre> <h3 id="\u9898\u76ee\uff1a\u5b9e\u73b0-add123">\u9898\u76ee\uff1a\u5b9e\u73b0 add(1)(2)(3)</h3> <h2 id="21-\u5927\u6570\u76f8\u52a0">21 \u5927\u6570\u76f8\u52a0</h2> <pre><code class="language-js">function add(a, b) {\n  // \u4e24\u4e2a\u6570\u7684\u6700\u5927\u957f\u5ea6\n  let maxLength = Math.max(a.length, b.length);\n  let str = &#39;&#39;;\n\n  // \u5c06\u4e24\u4e2a\u6570\u8865\u9f50\u6210\u4e00\u6837\u957f\u5ea6\n  a = a.padStart(maxLength, &#39;0&#39;);\n  b = b.padStart(maxLength, &#39;0&#39;);\n\n  // \u4ece\u540e\u5f80\u524d\u76f8\u52a0\n  let shift = 0;\n  for (let i = maxLength - 1; i &gt;= 0; i--) {\n    let sum = shift + parseInt(a[i]) + parseInt(b[i]);\n    let cur = sum % 10;\n    shift = Math.floor(sum / 10);\n    str = cur + str;\n  }\n\n  if (shift &gt; 0) str = shift + str;\n\n  return str;\n}</code></pre> <h2 id="22-\u62cd\u5e73\u6570\u7ec4">22 \u62cd\u5e73\u6570\u7ec4</h2> <h3 id="221-\u4e00\u5c42">22.1 \u4e00\u5c42</h3> <h3 id="221-\u5168\u90e8\u62cd\u5e73">22.1 \u5168\u90e8\u62cd\u5e73</h3> <pre><code class="language-js">function flat(arr) {\n  let newArr = [];\n\n  for (let item of arr) {\n    if (Array.isArray(item)) {\n      item = flat(item);\n    }\n    newArr = newArr.concat(item);\n  }\n\n  return newArr;\n}</code></pre> <pre><code class="language-js">function flat(arr) {\n  return arr.reduce((newArr, item) =&gt; {\n    if (Array.isArray(item)) {\n      item = flat(item);\n    }\n    return newArr.concat(item);\n  }, []);\n}</code></pre> <h3 id="222-\u4f7f\u7528\u6808">22.2 \u4f7f\u7528\u6808</h3> <pre><code class="language-js">function flat(arr) {\n  let stack = [].concat(arr);\n  let res = [];\n\n  while (stack.length) {\n    let item = stack.pop();\n\n    if (Array.isArray(item)) {\n      stack.push(...item);\n    } else {\n      res.unshift(item);\n    }\n  }\n\n  return res;\n}</code></pre> <h3 id="223-\u4f20\u53c2">22.3 \u4f20\u53c2</h3> <pre><code class="language-js">function flat(arr, num = 1) {\n  if (num &gt; 0) {\n    return arr.reduce((newArr, item) =&gt; {\n      if (Array.isArray(item)) {\n        item = flat(item, num - 1);\n      }\n      return newArr.concat(item);\n    }, []);\n  } else {\n    return [].concat(arr);\n  }\n}</code></pre> <h3 id="224-\u5728\u539f\u578b\u4e0a\u91cd\u5199">22.4 \u5728\u539f\u578b\u4e0a\u91cd\u5199</h3> <pre><code class="language-js">Array.prototype.myflat = function(num = 1) {\n  if (num &gt; 0) {\n    return this.reduce((newArr, item) =&gt; {\n      // if (Array.isArray(item)) {\n      //   let newItem = item.myflat(num - 1);\n      //   return newArr.concat(newItem);\n      // }\n      // return newArr.concat(item);\n      return Array.isArray(item) ? newArr.concat(item.myflat(num - 1)) : newArr.concat(item);\n    }, []);\n  } else {\n    return [].concat(this);\n  }\n};</code></pre> <h2 id="23-\u5b9e\u73b0\u9632\u6296\u51fd\u6570">23 \u5b9e\u73b0\u9632\u6296\u51fd\u6570</h2> <p><strong>\u4ec0\u4e48\u662f\u9632\u6296\u51fd\u6570\uff1a</strong></p> <ul> <li>\u9891\u7e41\u89e6\u53d1\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u4f1a\u5728\u4e8b\u4ef6\u89e6\u53d1 <code>n</code> \u79d2\u540e\u624d\u6267\u884c</li> <li>\u5982\u679c\u5728\u4e00\u4e2a\u4e8b\u4ef6\u89e6\u53d1\u7684 <code>n</code> \u79d2\u5185\u53c8\u89e6\u53d1\u4e86\u8fd9\u4e2a\u4e8b\u4ef6\uff0c\u90a3\u5c31\u4ee5\u65b0\u7684\u4e8b\u4ef6\u7684\u65f6\u95f4\u4e3a\u51c6\uff0c<code>n</code> \u79d2\u540e\u624d\u6267\u884c</li> <li>\u603b\u4e4b\uff0c\u5c31\u662f\u8981\u7b49\u89e6\u53d1\u5b8c\u4e8b\u4ef6 <code>n</code> \u79d2\u5185\u4e0d\u518d\u89e6\u53d1\u4e8b\u4ef6\u624d\u6267\u884c</li> </ul> <pre><code class="language-js">// \u5e38\u89c4\u9632\u6296\nfunction debounce(func, time) {\n  let timer;\n\n  return function() {\n    let args = arguments;\n\n    clearTimeout(timer);\n    timer = setTimeout(() =&gt; {\n      func.apply(this, arguments);\n    }, time);\n  };\n}</code></pre> <pre><code class="language-js">// \u7acb\u5373\u6267\u884c\nfunction debounce(func, time, immediate) {\n  let timer = null;\n\n  return function() {\n    if (timer) clearTimeout(timer);\n\n    if (immediate) {\n      // \u5982\u679c timer === null\uff0c\u8bf4\u660e\u6ca1\u6709\u6267\u884c\u8fc7\uff0c\u7acb\u5373\u6267\u884c\n      if (!timer) func.apply(this, arguments);\n\n      timer = setTimeout(() =&gt; {\n        timer = null;\n      }, time);\n    } else {\n      timer = setTimeout(() =&gt; {\n        func.apply(this, arguments);\n      }, time);\n    }\n  };\n}</code></pre> <h3 id="\u9898\u76ee\uff1a\u5b9e\u73b0\u9632\u6296\u51fd\u6570">\u9898\u76ee\uff1a\u5b9e\u73b0\u9632\u6296\u51fd\u6570</h3> <h2 id="24-\u5b9e\u73b0\u8282\u6d41\u51fd\u6570">24 \u5b9e\u73b0\u8282\u6d41\u51fd\u6570</h2> <p><strong>\u4ec0\u4e48\u662f\u8282\u6d41\u51fd\u6570\uff1a</strong></p> <ul> <li>\u6301\u7eed\u89e6\u53d1\u4e8b\u4ef6\uff0c\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\uff0c\u53ea\u6267\u884c\u4e00\u6b21\u4e8b\u4ef6</li> </ul> <pre><code class="language-js">function throttle(func, time) {\n  let prevTime = 0;\n  let timer = null;\n\n  return function() {\n    let curTime = Date.now();\n\n    let run = () =&gt; {\n      timer = null;\n      prevTime = curTime;\n      func.apply(this, arguments);\n    };\n\n    // \u7b2c\u4e00\u6b21\u89e6\u53d1\u9a6c\u4e0a\u6267\u884c\n    if (curTime - prevTime &gt;= time) {\n      clearTimeout(timer);\n      run();\n    }\n    // \u518d\u6b21\u89e6\u53d1\uff0c\u5ef6\u65f6\u6267\u884c\n    else {\n      clearTimeout(timer);\n      timer = setTimeout(run, time);\n    }\n  };\n}</code></pre> <h3 id="\u9898\u76ee\uff1a\u5b9e\u73b0\u8282\u6d41\u51fd\u6570">\u9898\u76ee\uff1a\u5b9e\u73b0\u8282\u6d41\u51fd\u6570</h3> <h2 id="25-\u5b9e\u73b0\u5b57\u7b26\u4e32\u7ffb\u8f6c">25 \u5b9e\u73b0\u5b57\u7b26\u4e32\u7ffb\u8f6c</h2> <p><strong>\u601d\u8def\uff1a</strong></p> <ul> <li>\u53cc\u6307\u9488\uff0c\u5de6\u53f3\u4e92\u6362</li> </ul> <pre><code class="language-js">var reverseString = function(s) {\n  let l = s.length - 1;\n\n  for (let left = 0, right = l - left; left &lt; right; left++, right--) {\n    [s[left], s[right]] = [s[right], s[left]];\n  }\n\n  return s;\n};</code></pre> <h2 id="26-\u6570\u7ec4\u53bb\u91cd">26 \u6570\u7ec4\u53bb\u91cd</h2> <p><strong>\u6ce8\u610f\u70b9\uff1a</strong></p> <ul> <li>\u542b\u6709 <code>NaN</code> \u7684\u60c5\u51b5\uff0c<code>NaN !== NaN</code></li> <li>\u542b\u6709\u5bf9\u8c61\u7684\u60c5\u51b5</li> </ul> <p><strong>\u5faa\u73af\uff1a</strong></p> <pre><code class="language-js">function unique(arr) {\n  let newArr = [];\n\n  for (let i = 0; i &lt; arr.length; i++) {\n    if (newArr.indexOf(arr[i])) {\n      newArr.push(arr[i]);\n    }\n  }\n\n  return newArr;\n}</code></pre> <p><strong>Set\uff1a</strong></p> <pre><code class="language-js">function unique(arr) {\n  return Array.from(new Set(arr));\n}</code></pre> <h3 id="\u9898\u76ee\uff1a\u6570\u7ec4\u53bb\u91cd">\u9898\u76ee\uff1a\u6570\u7ec4\u53bb\u91cd</h3> <h2 id="27-\u5b9e\u73b0\u5343\u4f4d\u5206\u9694\u7b26">27 \u5b9e\u73b0\u5343\u4f4d\u5206\u9694\u7b26</h2> <p><strong>\u5b9e\u73b0\u65b9\u6848\uff1a</strong></p> <ul> <li>\u4ece\u53f3\u5230\u5de6\u904d\u5386\u5b57\u7b26\u4e32</li> <li>toLocalString</li> <li>\u6b63\u5219</li> </ul> <pre><code class="language-js">function numFormat(num) {\n  return num.toString().replace(/^\\d+/g, str =&gt; {\n    return str.replace(/(\\d)(?=(?:\\d{3})+$)/g, &#39;$1,&#39;);\n  });\n}</code></pre> <h2 id="28-\u5224\u65ad\u662f\u5426\u662f\u56de\u6587\u6570">28 \u5224\u65ad\u662f\u5426\u662f\u56de\u6587\u6570</h2> <p><strong>\u9898\u76ee\uff1a</strong></p> <p>\u56de\u6587\u6570\u662f\u6307\u6b63\u5e8f\uff08\u4ece\u5de6\u5411\u53f3\uff09\u548c\u5012\u5e8f\uff08\u4ece\u53f3\u5411\u5de6\uff09\u8bfb\u90fd\u662f\u4e00\u6837\u7684\u6574\u6570\u3002\u4f8b\u5982\uff0c<code>121</code> \u662f\u56de\u6587\uff0c\u800c <code>123</code> \u4e0d\u662f</p> <p><strong>\u5de6\u53f3\u6307\u9488\u904d\u5386\uff1a</strong></p> <pre><code class="language-js">var isPalindrome = function(x) {\n  let str = x.toString();\n\n  for (let left = 0, right = str.length - 1; left &lt; right; left++, right--) {\n    if (str[left] !== str[right]) {\n      return false;\n    }\n  }\n\n  return true;\n};</code></pre> <p><strong>\u53cd\u8f6c\u6570\u5b57\uff1a</strong></p> <pre><code class="language-js">var isPalindrome = function(x) {\n  let temp = x;\n  let x2 = 0;\n\n  while (temp) {\n    // \u83b7\u53d6\u6700\u540e\u4e00\u4f4d\u6570\u5b57\n    let lastNum = temp % 10;\n    // \u53bb\u9664\u6700\u540e\u4e00\u4f4d\u6570\u5b57\n    temp = Math.floor(temp / 10);\n    // \u65b0\u6570\u5b57\u6bcf\u6b21\u904d\u5386\u4e5810\n    x2 = x2 * 10 + lastNum;\n  }\n\n  return x === x2;\n};</code></pre> <h2 id="29-\u5b9e\u73b0\u4e00\u4e2a\u6a21\u677f\u5f15\u64ce">29 \u5b9e\u73b0\u4e00\u4e2a\u6a21\u677f\u5f15\u64ce</h2> <h2 id="30-\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u662f\u7d20\u6570">30 \u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u662f\u7d20\u6570</h2> <p><strong>\u601d\u8def\uff1a</strong></p> <ul> <li>\u7d20\u6570\u53ea\u80fd\u88ab 1 \u548c\u5b83\u81ea\u5df1\u6574\u9664</li> <li>\u53d6\u8fd9\u4e2a\u6570\u7684\u5e73\u65b9\u6839\uff0c\u53e6\u4e00\u4e2a\u56e0\u6570\u4e00\u5b9a\u5c0f\u4e8e\u8fd9\u4e2a\u5e73\u65b9\u6839</li> <li>\u4f8b\u5982 16 \u7684\u5e73\u65b9\u8ddf\u662f 4\uff0c\u5c31\u53ef\u4ee5\u4ece 2-4 \u4e2d\u53bb\u627e\u4e00\u4e2a\u56e0\u6570</li> </ul> <pre><code class="language-js">var isPrime = function(x) {\n  for (let i = 2; i * i &lt;= x; i++) {\n    if (x % i == 0) {\n      return false;\n    }\n  }\n\n  return true;\n};</code></pre> <h2 id="31-\u83b7\u53d6-n-\u4ee5\u5185\u6240\u6709\u7684\u7d20\u6570">31 \u83b7\u53d6 n \u4ee5\u5185\u6240\u6709\u7684\u7d20\u6570</h2> <p><strong>\u9898\u76ee\uff1a</strong></p> <p>\u7edf\u8ba1\u6240\u6709\u5c0f\u4e8e\u975e\u8d1f\u6574\u6570 n \u7684\u8d28\u6570\u7684\u6570\u91cf</p> <p><strong>\u9010\u4e00\u904d\u5386\uff1a</strong></p> <p><strong>\u6807\u8bb0\u5408\u6570\uff1a</strong></p> <ul> <li>\u904d\u5386\u4e00\u6b21</li> <li>\u4ece 2 \u5f00\u59cb\u6807\u8bb0 2 \u7684\u500d\u6570\uff0c\u4e00\u4e2a\u6570\u7684\u500d\u6570\u4e00\u5b9a\u662f\u5408\u6570</li> </ul> <pre><code class="language-js">var countPrimes = function(n) {\n  let mark = new Array(n).fill(1);\n  let num = 0;\n\n  for (let i = 2; i &lt; n; i++) {\n    if (mark[i]) {\n      num++;\n\n      // \u5c06\u5f53\u524d i \u7684\u500d\u6570\u6807\u8bb0\u4e3a 0\n      for (let j = 2; j * i &lt; n; j++) {\n        mark[j * i] = 0;\n      }\n    }\n  }\n\n  return num;\n};</code></pre> <h2 id="32-\u987a\u5e8f\u9012\u589e\u7684\u5b57\u7b26\u4e32">32 \u987a\u5e8f\u9012\u589e\u7684\u5b57\u7b26\u4e32</h2> <p><strong>\u9898\u76ee\uff1a</strong></p> <p>\u6570\u5b57\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u89c4\u5f8b\u5982\u4e0b\uff1a</p> <pre><code>12345678910111213...</code></pre><p>\u7b2c n \u4f4d\u5b57\u7b26\u662f\u4ec0\u4e48\uff1f</p> <pre><code>eg. n = 11, ret = &#39;0&#39;</code></pre><p><strong>\u601d\u8def\uff1a</strong></p> <ol> <li><p>1 \u4f4d\u7684\u4e2a\u6570\u4e3a\uff1a <code>9 * 10^0 * 1</code> \u5373\uff1a\u7b2c 9 \u4f4d\u6570\u5b57\u662f 9</p> </li> <li><p>2 \u4f4d\u7684\u4e2a\u6570\u4e3a\uff1a <code>9 * 10^1 * 2</code> \u5373\uff1a\u7b2c 189 \u4f4d\u6570\u5b57\u662f 99</p> </li> <li><p>3 \u4f4d\u7684\u4e2a\u6570\u4e3a\uff1a <code>9 * 10^2 * 3</code> \u5373\uff1a\u7b2c 2889 \u4f4d\u6570\u5b57\u662f 999</p> </li> <li><p>\u7528\u5faa\u73af\u7d2f\u52a0\u627e\u51fa\u6570\u5b57\u7684\u4f4d\u6570\uff0c\u548c\u5f53\u524d\u4f4d\u6570\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u662f\u7b2c\u51e0\u4e2a\u6570</p> </li> <li><p>\u4f8b\u5982\uff1a 3 \u4f4d\u6570\u7684\u6700\u540e\u4e00\u4e2a\u6570\u5b57\u662f 999\uff0c\u5b83\u5728\u7b2c 2889 \u4e2a\u4f4d\u7f6e</p> </li> <li><p>\u627e\u5230\u7b2c n \u4e2a\u4f4d\u7f6e\u7684\u90a3\u4e2a\u6570</p> </li> <li><p>\u4f8b\u5982\uff1a\u7b2c 3010 \u4e2a\u4f4d\u7f6e\uff0c(3010-2889)/4 + 999</p> </li> </ol> <pre><code class="language-js">function getn(n) {\n  let curLvSize = 0; // \u5f53\u524d\u4f4d\u6570\u6700\u5927\u503c\u7684\u4f4d\u7f6e\uff0c\u4f8b\u5982 9 \u7684\u4f4d\u7f6e\u662f 9\uff0c99 \u7684\u4f4d\u7f6e\u662f 189\n  let length = 1; // \u4f4d\u6570\n\n  // \u904d\u5386\uff0c\u627e\u5230\u4f4d\u6570\u548c\u6700\u5927\u503c\u7684\u4f4d\u7f6e\n  while (true) {\n    let size = 9 * Math.pow(10, length - 1) * length;\n\n    if (curLvSize + size &lt; n) {\n      curLvSize = curLvSize + size;\n      length++;\n    } else {\n      break;\n    }\n  }\n\n  let prevLvNum = 10 ** (length - 1) - 1;\n  let target = Math.ceil((n - num) / length) + prevLvNum; // \u76ee\u6807\u4f4d\u7f6e\u7684\u6570\u5b57\n  let position = (n - num) % length;\n\n  return target.toString().substr(position - 1, 1);\n}</code></pre> <h2 id="33-\u6570\u7ec4\u6700\u5927\u548c">33 \u6570\u7ec4\u6700\u5927\u548c</h2> <p><strong>\u9898\u76ee\uff1a</strong></p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums\uff0c\u627e\u5230\u4e00\u4e2a\u5177\u6709\u6700\u5927\u548c\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\uff08\u5b50\u6570\u7ec4\u6700\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u8fd4\u56de\u5176\u6700\u5927\u548c</p> <pre><code>\u8f93\u5165\uff1anums = [-2,1,-3,4,-1,2,1,-5,4]\n\u8f93\u51fa\uff1a6\n\u89e3\u91ca\uff1a\u8fde\u7eed\u5b50\u6570\u7ec4 [4,-1,2,1] \u7684\u548c\u6700\u5927\uff0c\u4e3a 6</code></pre><pre><code class="language-js">function getMax(nums) {\n  let max = 0;\n  let min = 0;\n  let sum = 0;\n\n  for (let i = 0; i &lt; nums.length; i++) {\n    sum = sum + nums[i];\n\n    if (sum &gt; max) {\n      max = sum;\n    }\n    if (sum &lt; min) {\n      min = sum;\n    }\n  }\n\n  return sum;\n}</code></pre> ';n.exports=l}}]);