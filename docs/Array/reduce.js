(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["docs/Array/reduce"],{"3zhG":function(t,e){var a='<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce" target="_blank">\u539f\u6587\u94fe\u63a5</a> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce" target="_blank">en</a></p> <h1 id="arrayprototypereduce">Array.prototype.reduce()</h1> <p>reduce() \u65b9\u6cd5\u5bf9\u7d2f\u52a0\u5668\u548c\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20 (\u4ece\u5de6\u5230\u53f3)\u5e94\u7528\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u5176\u51cf\u5c11\u4e3a\u5355\u4e2a\u503c\u3002</p> <pre><code class="language-javascript">let sum = [0, 1, 2, 3].reduce(function(acc, val) {\n  return acc + val;\n}, 0);\n\nconsole.log(sum);\n// 6\n\nlet list1 = [[0, 1], [2, 3], [4, 5]];\n\nlet list2 = [0, [1, [2, [3, [4, [5, [6]]]]]]];\n\nconst flatten = (arr) =&gt; {\n    return arr.reduce(\n        (acc, val) =&gt; {\n            return acc.concat(Array.isArray(val) ? flatten(val) : val)\n        }, []\n    );\n};\n\nflatten(list1);\n// [0, 1, 2, 3, 4, 5]\n\nflatten(list2);\n// [ 0, 1, 2, 3, 4, 5, 6 ]</code></pre> <h2 id="\u8bed\u6cd5">\u8bed\u6cd5</h2> <pre><code class="language-javascript">arr.reduce(callback,[initialValue])</code></pre> <h3 id="\u53c2\u6570">\u53c2\u6570</h3> <ul> <li><code>callback</code> \u6267\u884c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u503c\u7684\u51fd\u6570\uff0c\u5305\u542b\u56db\u4e2a\u53c2\u6570<ul> <li><code>accumulator</code> \u4e0a\u4e00\u6b21\u8c03\u7528\u56de\u8c03\u8fd4\u56de\u7684\u503c\uff0c\u6216\u8005\u662f\u63d0\u4f9b\u7684\u521d\u59cb\u503c\uff08initialValue\uff09</li> <li><code>currentValue</code> \u6570\u7ec4\u4e2d\u6b63\u5728\u5904\u7406\u7684\u5143\u7d20</li> <li><code>currentIndex</code> \u6570\u636e\u4e2d\u6b63\u5728\u5904\u7406\u7684\u5143\u7d20\u7d22\u5f15\uff0c\u5982\u679c\u63d0\u4f9b\u4e86 initialValue \uff0c\u4ece0\u5f00\u59cb\uff1b\u5426\u5219\u4ece1\u5f00\u59cb</li> <li><code>array</code> \u8c03\u7528 reduce \u7684\u6570\u7ec4</li> </ul> </li> <li><code>initialValue</code> \u53ef\u9009\u9879\uff0c\u5176\u503c\u7528\u4e8e\u7b2c\u4e00\u6b21\u8c03\u7528 callback \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002</li> </ul> <h3 id="\u8fd4\u56de\u503c">\u8fd4\u56de\u503c</h3> <p>\u51fd\u6570\u7d2f\u8ba1\u5904\u7406\u7684\u7ed3\u679c</p> <h2 id="\u63cf\u8ff0">\u63cf\u8ff0</h2> <p>reduce \u4e3a\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u4f9d\u6b21\u6267\u884c\u56de\u8c03\u51fd\u6570\uff0c\u4e0d\u5305\u62ec\u6570\u7ec4\u4e2d\u88ab\u5220\u9664\u6216\u4ece\u672a\u88ab\u8d4b\u503c\u7684\u5143\u7d20\uff0c\u63a5\u53d7\u56db\u4e2a\u53c2\u6570\uff1a\u521d\u59cb\u503c accumulator \uff08\u6216\u8005\u4e0a\u4e00\u6b21\u56de\u8c03\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff09\uff0c\u5f53\u524d\u5143\u7d20\u503c currentValue \uff0c\u5f53\u524d\u7d22\u5f15 currentIndex \uff0c\u8c03\u7528 reduce \u7684\u6570\u7ec4\u3002</p> <p>\u56de\u8c03\u51fd\u6570\u7b2c\u4e00\u6b21\u6267\u884c\u65f6\uff0caccumulator \u548c currentValue \u7684\u53d6\u503c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u8c03\u7528 reduce \u65f6\u63d0\u4f9binitialValue\uff0caccumulator \u53d6\u503c\u4e3a initialValue \uff0ccurrentValue \u53d6\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u503c\uff1b\u6ca1\u6709\u63d0\u4f9b initialValue \uff0caccumulator \u53d6\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u503c\uff0ccurrentValue \u53d6 \u6570\u7ec4\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u503c\u3002</p> <p><code>\u6ce8\u610f: \u4e0d\u63d0\u4f9b initialValue \uff0creduce \u4f1a\u4ece\u7d22\u5f151\u7684\u5730\u65b9\u5f00\u59cb\u6267\u884c callback \u65b9\u6cd5\uff0c\u8df3\u8fc7\u7b2c\u4e00\u4e2a\u7d22\u5f15\u3002\u63d0\u4f9b initialValue \uff0c\u4ece\u7d22\u5f150\u5f00\u59cb\u3002</code></p> <p>\u5982\u679c\u6570\u7ec4\u4e3a\u7a7a\u5e76\u4e14\u6ca1\u6709\u63d0\u4f9binitialValue\uff0c \u4f1a\u629b\u51faTypeError \u3002\u5982\u679c\u6570\u7ec4\u4ec5\u6709\u4e00\u4e2a\u5143\u7d20\uff08\u65e0\u8bba\u4f4d\u7f6e\u5982\u4f55\uff09\u5e76\u4e14\u6ca1\u6709\u63d0\u4f9binitialValue\uff0c \u6216\u8005\u6709\u63d0\u4f9binitialValue\u4f46\u662f\u6570\u7ec4\u4e3a\u7a7a\uff0c\u90a3\u4e48\u6b64\u552f\u4e00\u503c\u5c06\u88ab\u8fd4\u56de\u5e76\u4e14callback\u4e0d\u4f1a\u88ab\u6267\u884c\u3002</p> <p>\u63d0\u4f9b initialValue \u901a\u5e38\u66f4\u5b89\u5168\uff0c\u6b63\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff0c\u6ca1\u6709 initialValue \u6709\u4e09\u79cd\u53ef\u80fd\u8f93\u51fa\uff1a</p> <pre><code class="language-javascript">var maxCallback = ( pre, cur ) =&gt; Math.max( pre.x, cur.x );\nvar maxCallback2 = ( max, cur ) =&gt; Math.max( max, cur );\n\n// reduce() without initialValue\n[ { x: 22 }, { x: 42 } ].reduce( maxCallback ); // 42\n[ { x: 22 }            ].reduce( maxCallback ); // { x: 22 }\n[                      ].reduce( maxCallback ); // TypeError\n\n// map/reduce; better solution, also works for empty arrays\n[ { x: 22 }, { x: 42 } ].map( el =&gt; el.x )\n                        .reduce( maxCallback2, -Infinity );\n\n### reduce\u5982\u4f55\u8fd0\u884c\n\n\u4f8b\u5982\u6267\u884c\u4e0b\u9762\u7684\u4ee3\u7801\n\n```javascript\n[0,1,2,3,4].reduce(function(accumulator, currentValue, currentIndex, array){\n  return accumulator + currentValue;\n});</code></pre> <p>callback \u88ab\u8c03\u7528\u56db\u6b21\uff0c\u6bcf\u6b21\u8c03\u7528\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u5982\u4e0b\u8868\uff1a</p> <table> <thead> <tr> <th align="center">accumulator</th> <th align="center">currentValue</th> <th align="center">currentIndex</th> <th align="center">array</th> <th align="center">return</th> <th align="center">value</th> </tr> </thead> <tbody><tr> <td align="center">first call</td> <td align="center">0</td> <td align="center">1</td> <td align="center">1</td> <td align="center">[0,1,2,3,4]</td> <td align="center">1</td> </tr> <tr> <td align="center">second call</td> <td align="center">1</td> <td align="center">2</td> <td align="center">2</td> <td align="center">[0,1,2,3,4]</td> <td align="center">3</td> </tr> <tr> <td align="center">third call</td> <td align="center">3</td> <td align="center">3</td> <td align="center">3</td> <td align="center">[0,1,2,3,4]</td> <td align="center">6</td> </tr> <tr> <td align="center">fourth call</td> <td align="center">6</td> <td align="center">4</td> <td align="center">4</td> <td align="center">[0,1,2,3,4]</td> <td align="center">10</td> </tr> </tbody></table> <p>reduce \u7684\u8fd4\u56de\u503c\u662f\u6700\u540e\u4e00\u6b21\u8c03\u7528 callback \u7684\u8fd4\u56de\u503c\uff0810\uff09\u3002</p> <p>\u4f7f\u7528Arrow Function \u53ef\u4ee5\u4ee3\u66ff\u4e00\u4e2a\u5b8c\u6574\u7684\u51fd\u6570\uff0c\u4ea7\u751f\u7684\u6548\u679c\u548c\u4e0b\u9762\u4ee3\u7801\u76f8\u540c</p> <pre><code class="language-javascript">[0, 1, 2, 3, 4].reduce( (prev, curr) =&gt; prev + curr );</code></pre> <p>\u5982\u679c\u628a\u521d\u59cb\u503c\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u5165 reduce\uff0c\u6700\u7ec8\u8fd4\u56de\u503c\u53d8\u4e3a20\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code class="language-javascript">[0,1,2,3,4].reduce( (accumulator, currentValue, currentIndex, array) =&gt; {\n  return accumulator + currentValue;\n}, 10);</code></pre> <table> <thead> <tr> <th align="center">callback</th> <th align="center">accumulator</th> <th align="center">currentValue</th> <th align="center">currentIndex</th> <th align="center">array</th> <th align="center">return</th> </tr> </thead> <tbody><tr> <td align="center">\u7b2c\u4e00\u6b21\u8c03\u7528</td> <td align="center">10</td> <td align="center">0</td> <td align="center">0</td> <td align="center">[0,1,2,3,4]</td> <td align="center">10</td> </tr> <tr> <td align="center">\u7b2c\u4e8c\u6b21\u8c03\u7528</td> <td align="center">10</td> <td align="center">1</td> <td align="center">1</td> <td align="center">[0,1,2,3,4]</td> <td align="center">11</td> </tr> <tr> <td align="center">\u7b2c\u4e09\u6b21\u8c03\u7528</td> <td align="center">11</td> <td align="center">2</td> <td align="center">2</td> <td align="center">[0,1,2,3,4]</td> <td align="center">13</td> </tr> <tr> <td align="center">\u7b2c\u56db\u6b21\u8c03\u7528</td> <td align="center">13</td> <td align="center">3</td> <td align="center">3</td> <td align="center">[0,1,2,3,4]</td> <td align="center">16</td> </tr> <tr> <td align="center">\u7b2c\u4e94\u6b21\u8c03\u7528</td> <td align="center">16</td> <td align="center">4</td> <td align="center">4</td> <td align="center">[0,1,2,3,4]</td> <td align="center">20</td> </tr> </tbody></table> <p>reduce\u6267\u884c\u5b8c\uff0c\u6700\u7ec8\u8fd4\u56de20</p> <h2 id="\u4f8b\u5b50">\u4f8b\u5b50</h2> <h3 id="\u5c06\u6570\u7ec4\u6240\u6709\u9879\u76f8\u52a0">\u5c06\u6570\u7ec4\u6240\u6709\u9879\u76f8\u52a0</h3> <pre><code class="language-javascript">var sum = [0, 1, 2, 3].reduce(function(a, b) {\n    return a + b;\n}, 0);\n// sum is 6</code></pre> <p>\u6216\u8005\u7528\u7bad\u5934\u51fd\u6570\u7f16\u5199</p> <pre><code class="language-javascript">var total = [ 0, 1, 2, 3 ].reduce( ( acc, cur ) =&gt; acc + cur, 0 );</code></pre> <h3 id="\u6570\u7ec4\u6241\u5e73\u5316">\u6570\u7ec4\u6241\u5e73\u5316</h3> <pre><code class="language-javascript">var flattened = [[0, 1], [2, 3], [4, 5]].reduce(function(a, b) {\n    return a.concat(b);\n}, []);\n// flattened is [0, 1, 2, 3, 4, 5]</code></pre> <p>\u6216\u8005\u7528\u7bad\u5934\u51fd\u6570\u7f16\u5199</p> <pre><code class="language-javascript">var flattened = [[0, 1], [2, 3], [4, 5]].reduce( ( acc, cur ) =&gt; acc.concat(cur), [] );</code></pre> <h3 id="\u8ba1\u7b97\u6570\u7ec4\u4e2d\u5404\u4e2a\u503c\u51fa\u73b0\u6b21\u6570">\u8ba1\u7b97\u6570\u7ec4\u4e2d\u5404\u4e2a\u503c\u51fa\u73b0\u6b21\u6570</h3> <pre><code class="language-javascript">var names = [&#39;Alice&#39;, &#39;Bob&#39;, &#39;Tiff&#39;, &#39;Bruce&#39;, &#39;Alice&#39;];\n\nvar countedNames = names.reduce(function(allNames, name) {\n  if (name in allNames) {\n    allNames[name]++;\n  }\n  else {\n    allNames[name] = 1;\n  }\n  return allNames;\n}, {});\n// countedNames is { &#39;Alice&#39;: 2, &#39;Bob&#39;: 1, &#39;Tiff&#39;: 1, &#39;Bruce&#39;: 1 }</code></pre> <h3 id="\u5bf9\u8c61\u6570\u7ec4\u7684\u8fde\u63a5\u8981\u4f7f\u7528\u5c55\u5f00\u8fd0\u7b97\u7b26\u548c\u521d\u59cb\u503c">\u5bf9\u8c61\u6570\u7ec4\u7684\u8fde\u63a5\u8981\u4f7f\u7528\u5c55\u5f00\u8fd0\u7b97\u7b26\u548c\u521d\u59cb\u503c</h3> <pre><code class="language-javascript">// friends - an array of objects\n// where object field &quot;books&quot; - list of favorite books\nvar friends = [\n{ name: &quot;Anna&quot;, books: [&quot;Bible&quot;, &quot;Harry Potter&quot;], age: 21 },\n{ name: &quot;Bob&quot;, books: [&quot;War and peace&quot;, &quot;Romeo and Juliet&quot;], age: 26 },\n{ name: &quot;Alice&quot;, books: [&quot;The Lord of the Rings&quot;, &quot;The Shining&quot;], age: 18 }\n]\n\n// allbooks - list which will contain all friends books +\n// additional list contained in initialValue\nvar allbooks = friends.reduce(function(prev, curr) {\n  return [...prev, ...curr.books];\n}, [&quot;Alphabet&quot;]);\n\n// allbooks = [&quot;Alphabet&quot;, &quot;Bible&quot;, &quot;Harry Potter&quot;, &quot;War and peace&quot;,\n// &quot;Romeo and Juliet&quot;, &quot;The Lord of the Rings&quot;, &quot;The Shining&quot;]</code></pre> <h2 id="\u89c4\u8303">\u89c4\u8303</h2> <table> <thead> <tr> <th align="left">Specification</th> <th align="left">Status</th> <th align="left">Comment</th> </tr> </thead> <tbody><tr> <td align="left">ECMAScript 5.1 (ECMA-262)</td> <td align="left">Standard</td> <td align="left">Initial definition</td> </tr> <tr> <td align="left">ECMAScript 2015 (6th Edition, ECMA-262)</td> <td align="left">Standard</td> <td align="left"></td> </tr> </tbody></table> ';t.exports=a}}]);